(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{594:function(t,s,e){"use strict";e.r(s);var a=e(20),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1、网络策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、网络策略"}},[t._v("#")]),t._v(" 1、网络策略")]),t._v(" "),e("p",[t._v("如果你希望在 IP 地址或端口层面（OSI 第 3 层或第 4 层）控制网络流量， 则你可以考虑为集群中特定应用使用 Kubernetes 网络策略（NetworkPolicy）。 NetworkPolicy 是一种以应用为中心的结构，允许你设置如何允许 "),e("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pod"),e("OutboundLink")],1),t._v(" 与网络上的各类网络“实体” （我们这里使用实体以避免过度使用诸如“端点”和“服务”这类常用术语， 这些术语在 Kubernetes 中有特定含义）通信。")]),t._v(" "),e("p",[t._v("Pod 可以通信的 Pod 是通过如下三个标识符的组合来辩识的：")]),t._v(" "),e("ol",[e("li",[t._v("其他被允许的 Pods（例外：Pod 无法阻塞对自身的访问）")]),t._v(" "),e("li",[t._v("被允许的名字空间")]),t._v(" "),e("li",[t._v("IP 组块（例外：与 Pod 运行所在的节点的通信总是被允许的， 无论 Pod 或节点的 IP 地址）")])]),t._v(" "),e("p",[t._v("在定义基于 Pod 或名字空间的 NetworkPolicy 时，你会使用 "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/labels/",target:"_blank",rel:"noopener noreferrer"}},[t._v("选择算符"),e("OutboundLink")],1),t._v(" 来设定哪些流量 可以进入或离开与该算符匹配的 Pod。")]),t._v(" "),e("p",[t._v("同时，当基于 IP 的 NetworkPolicy 被创建时，我们基于 IP 组块（CIDR 范围） 来定义策略。")]),t._v(" "),e("h2",{attrs:{id:"_2、前置条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、前置条件"}},[t._v("#")]),t._v(" 2、前置条件")]),t._v(" "),e("p",[t._v("网络策略通过"),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/",target:"_blank",rel:"noopener noreferrer"}},[t._v("网络插件"),e("OutboundLink")],1),t._v(" 来实现。要使用网络策略，你必须使用支持 NetworkPolicy 的网络解决方案。 创建一个 NetworkPolicy 资源对象而没有控制器来使它生效的话，是没有任何作用的。")]),t._v(" "),e("h2",{attrs:{id:"_3、pod-隔离的两种类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、pod-隔离的两种类型"}},[t._v("#")]),t._v(" 3、Pod 隔离的两种类型")]),t._v(" "),e("p",[t._v("Pod 有两种隔离: 出口的隔离和入口的隔离。它们涉及到可以建立哪些连接。 这里的“隔离”不是绝对的，而是意味着“有一些限制”。 另外的，“非隔离方向”意味着在所述方向上没有限制。这两种隔离（或不隔离）是独立声明的， 并且都与从一个 Pod 到另一个 Pod 的连接有关。")]),t._v(" "),e("p",[t._v("默认情况下，一个 Pod 的出口是非隔离的，即所有外向连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 "),e("code",[t._v("policyTypes")]),t._v(" 中包含 “Egress”，则该 Pod 是出口隔离的， 我们称这样的策略适用于该 Pod 的出口。当一个 Pod 的出口被隔离时， 唯一允许的来自 Pod 的连接是适用于出口的 Pod 的某个 NetworkPolicy 的 "),e("code",[t._v("egress")]),t._v(" 列表所允许的连接。 这些 "),e("code",[t._v("egress")]),t._v(" 列表的效果是相加的。")]),t._v(" "),e("p",[t._v("默认情况下，一个 Pod 对入口是非隔离的，即所有入站连接都是被允许的。如果有任何的 NetworkPolicy 选择该 Pod 并在其 "),e("code",[t._v("policyTypes")]),t._v(" 中包含 “Ingress”，则该 Pod 被隔离入口， 我们称这种策略适用于该 Pod 的入口。 当一个 Pod 的入口被隔离时，唯一允许进入该 Pod 的连接是来自该 Pod 节点的连接和适用于入口的 Pod 的某个 NetworkPolicy 的 "),e("code",[t._v("ingress")]),t._v(" 列表所允许的连接。这些 "),e("code",[t._v("ingress")]),t._v(" 列表的效果是相加的。")]),t._v(" "),e("p",[t._v("网络策略是相加的，所以不会产生冲突。如果策略适用于 Pod 某一特定方向的流量， Pod 在对应方向所允许的连接是适用的网络策略所允许的集合。 因此，评估的顺序不影响策略的结果。")]),t._v(" "),e("p",[t._v("要允许从源 Pod 到目的 Pod 的连接，源 Pod 的出口策略和目的 Pod 的入口策略都需要允许连接。 如果任何一方不允许连接，建立连接将会失败。")]),t._v(" "),e("h2",{attrs:{id:"_4、networkpolicy-资源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、networkpolicy-资源"}},[t._v("#")]),t._v(" 4、NetworkPolicy 资源")]),t._v(" "),e("p",[t._v("参阅 "),e("a",{attrs:{href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#networkpolicy-v1-networking-k8s-io",target:"_blank",rel:"noopener noreferrer"}},[t._v("NetworkPolicy"),e("OutboundLink")],1),t._v(" 来了解资源的完整定义。")]),t._v(" "),e("p",[t._v("下面是一个 NetworkPolicy 的示例:")]),t._v(" "),e("p",[t._v("service/networking/networkpolicy.yaml")]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NetworkPolicy\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("network"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("policy\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" db\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policyTypes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Ingress\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Egress\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ipBlock")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 172.17.0.0/16\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("except")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 172.17.1.0/24\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespaceSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myproject\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6379")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("egress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("to")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ipBlock")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.0.0.0/24\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5978")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br")])]),e("p",[e("strong",[t._v("Note:")]),t._v(" 除非选择支持网络策略的网络解决方案，否则将上述示例发送到API服务器没有任何效果。")]),t._v(" "),e("p",[e("strong",[t._v("必需字段")]),t._v("：与所有其他的 Kubernetes 配置一样，NetworkPolicy 需要 "),e("code",[t._v("apiVersion")]),t._v("、 "),e("code",[t._v("kind")]),t._v(" 和 "),e("code",[t._v("metadata")]),t._v(" 字段。关于配置文件操作的一般信息，请参考 "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/configure-pod-container/configure-pod-configmap/",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 ConfigMap 配置容器"),e("OutboundLink")],1),t._v(", 和"),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/object-management",target:"_blank",rel:"noopener noreferrer"}},[t._v("对象管理"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("spec")]),t._v("：NetworkPolicy "),e("a",{attrs:{href:"https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",target:"_blank",rel:"noopener noreferrer"}},[t._v("规约"),e("OutboundLink")],1),t._v(" 中包含了在一个名字空间中定义特定网络策略所需的所有信息。")]),t._v(" "),e("p",[e("strong",[t._v("podSelector")]),t._v("：每个 NetworkPolicy 都包括一个 "),e("code",[t._v("podSelector")]),t._v('，它对该策略所 适用的一组 Pod 进行选择。示例中的策略选择带有 "role=db" 标签的 Pod。 空的 '),e("code",[t._v("podSelector")]),t._v(" 选择名字空间下的所有 Pod。")]),t._v(" "),e("p",[e("strong",[t._v("policyTypes")]),t._v(": 每个 NetworkPolicy 都包含一个 "),e("code",[t._v("policyTypes")]),t._v(" 列表，其中包含 "),e("code",[t._v("Ingress")]),t._v(" 或 "),e("code",[t._v("Egress")]),t._v(" 或两者兼具。"),e("code",[t._v("policyTypes")]),t._v(" 字段表示给定的策略是应用于 进入所选 Pod 的入站流量还是来自所选 Pod 的出站流量，或两者兼有。 如果 NetworkPolicy 未指定 "),e("code",[t._v("policyTypes")]),t._v(" 则默认情况下始终设置 "),e("code",[t._v("Ingress")]),t._v("； 如果 NetworkPolicy 有任何出口规则的话则设置 "),e("code",[t._v("Egress")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("ingress")]),t._v(": 每个 NetworkPolicy 可包含一个 "),e("code",[t._v("ingress")]),t._v(" 规则的白名单列表。 每个规则都允许同时匹配 "),e("code",[t._v("from")]),t._v(" 和 "),e("code",[t._v("ports")]),t._v(" 部分的流量。示例策略中包含一条 简单的规则： 它匹配某个特定端口，来自三个来源中的一个，第一个通过 "),e("code",[t._v("ipBlock")]),t._v(" 指定，第二个通过 "),e("code",[t._v("namespaceSelector")]),t._v(" 指定，第三个通过 "),e("code",[t._v("podSelector")]),t._v(" 指定。")]),t._v(" "),e("p",[e("strong",[t._v("egress")]),t._v(": 每个 NetworkPolicy 可包含一个 "),e("code",[t._v("egress")]),t._v(" 规则的白名单列表。 每个规则都允许匹配 "),e("code",[t._v("to")]),t._v(" 和 "),e("code",[t._v("port")]),t._v(" 部分的流量。该示例策略包含一条规则， 该规则将指定端口上的流量匹配到 "),e("code",[t._v("10.0.0.0/24")]),t._v(" 中的任何目的地。")]),t._v(" "),e("p",[t._v("所以，该网络策略示例:")]),t._v(" "),e("ol",[e("li",[t._v('隔离 "default" 名字空间下 "role=db" 的 Pod （如果它们不是已经被隔离的话）。')]),t._v(" "),e("li",[t._v('（Ingress 规则）允许以下 Pod 连接到 "default" 名字空间下的带有 "role=db" 标签的所有 Pod 的 6379 TCP 端口：\n'),e("ul",[e("li",[t._v('"default" 名字空间下带有 "role=frontend" 标签的所有 Pod')]),t._v(" "),e("li",[t._v('带有 "project=myproject" 标签的所有名字空间中的 Pod')]),t._v(" "),e("li",[t._v("IP 地址范围为 172.17.0.0–172.17.0.255 和 172.17.2.0–172.17.255.255 （即，除了 172.17.1.0/24 之外的所有 172.17.0.0/16）")])])]),t._v(" "),e("li",[t._v('（Egress 规则）允许从带有 "role=db" 标签的名字空间下的任何 Pod 到 CIDR 10.0.0.0/24 下 5978 TCP 端口的连接。')])]),t._v(" "),e("p",[t._v("参阅"),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/tasks/administer-cluster/declare-network-policy/",target:"_blank",rel:"noopener noreferrer"}},[t._v("声明网络策略"),e("OutboundLink")],1),t._v("演练 了解更多示例。")]),t._v(" "),e("h2",{attrs:{id:"_5、选择器-to-和-from-的行为"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、选择器-to-和-from-的行为"}},[t._v("#")]),t._v(" 5、选择器 "),e("code",[t._v("to")]),t._v(" 和 "),e("code",[t._v("from")]),t._v(" 的行为")]),t._v(" "),e("p",[t._v("可以在 "),e("code",[t._v("ingress")]),t._v(" 的 "),e("code",[t._v("from")]),t._v(" 部分或 "),e("code",[t._v("egress")]),t._v(" 的 "),e("code",[t._v("to")]),t._v(" 部分中指定四种选择器：")]),t._v(" "),e("p",[e("strong",[t._v("podSelector")]),t._v(": 此选择器将在与 NetworkPolicy 相同的名字空间中选择特定的 Pod，应将其允许作为入站流量来源或出站流量目的地。")]),t._v(" "),e("p",[e("strong",[t._v("namespaceSelector")]),t._v("：此选择器将选择特定的名字空间，应将所有 Pod 用作其 入站流量来源或出站流量目的地。")]),t._v(" "),e("p",[e("strong",[t._v("namespaceSelector")]),t._v(" "),e("em",[t._v("和")]),t._v(" "),e("strong",[t._v("podSelector")]),t._v("： 一个指定 "),e("code",[t._v("namespaceSelector")]),t._v(" 和 "),e("code",[t._v("podSelector")]),t._v(" 的 "),e("code",[t._v("to")]),t._v("/"),e("code",[t._v("from")]),t._v(" 条目选择特定名字空间中的特定 Pod。 注意使用正确的 YAML 语法；下面的策略：")]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespaceSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alice\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" client\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[t._v("在 "),e("code",[t._v("from")]),t._v(" 数组中仅包含一个元素，只允许来自标有 "),e("code",[t._v("role=client")]),t._v(" 的 Pod 且 该 Pod 所在的名字空间中标有 "),e("code",[t._v("user=alice")]),t._v(" 的连接。但是 "),e("em",[t._v("这项")]),t._v(" 策略：")]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespaceSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alice\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" client\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[t._v("在 "),e("code",[t._v("from")]),t._v(" 数组中包含两个元素，允许来自本地名字空间中标有 "),e("code",[t._v("role=client")]),t._v(" 的 Pod 的连接，"),e("em",[t._v("或")]),t._v(" 来自任何名字空间中标有 "),e("code",[t._v("user=alice")]),t._v(" 的任何 Pod 的连接。")]),t._v(" "),e("p",[t._v("如有疑问，请使用 "),e("code",[t._v("kubectl describe")]),t._v(" 查看 Kubernetes 如何解释该策略。")]),t._v(" "),e("p",[e("strong",[t._v("ipBlock")]),t._v(": 此选择器将选择特定的 IP CIDR 范围以用作入站流量来源或出站流量目的地。 这些应该是集群外部 IP，因为 Pod IP 存在时间短暂的且随机产生。")]),t._v(" "),e("p",[t._v("集群的入站和出站机制通常需要重写数据包的源 IP 或目标 IP。 在发生这种情况时，不确定在 NetworkPolicy 处理之前还是之后发生， 并且对于网络插件、云提供商、"),e("code",[t._v("Service")]),t._v(" 实现等的不同组合，其行为可能会有所不同。")]),t._v(" "),e("p",[t._v("对入站流量而言，这意味着在某些情况下，你可以根据实际的原始源 IP 过滤传入的数据包， 而在其他情况下，NetworkPolicy 所作用的 "),e("code",[t._v("源IP")]),t._v(" 则可能是 "),e("code",[t._v("LoadBalancer")]),t._v(" 或 Pod 的节点等。")]),t._v(" "),e("p",[t._v("对于出站流量而言，这意味着从 Pod 到被重写为集群外部 IP 的 "),e("code",[t._v("Service")]),t._v(" IP 的连接可能会或可能不会受到基于 "),e("code",[t._v("ipBlock")]),t._v(" 的策略的约束。")]),t._v(" "),e("h2",{attrs:{id:"_6、默认策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、默认策略"}},[t._v("#")]),t._v(" 6、默认策略")]),t._v(" "),e("p",[t._v("默认情况下，如果名字空间中不存在任何策略，则所有进出该名字空间中 Pod 的流量都被允许。 以下示例使你可以更改该名字空间中的默认行为。")]),t._v(" "),e("h3",{attrs:{id:"_6-1、默认拒绝所有入站流量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、默认拒绝所有入站流量"}},[t._v("#")]),t._v(" 6.1、默认拒绝所有入站流量")]),t._v(" "),e("p",[t._v("你可以通过创建选择所有容器但不允许任何进入这些容器的入站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://raw.githubusercontent.com/kubernetes/website/main/content/zh/examples/service/networking/network-policy-default-deny-ingress.yaml",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("service/networking/network-policy-default-deny-ingress.yaml")]),t._v(" "),e("OutboundLink")],1),e("img",{attrs:{src:"https://d33wubrfki0l68.cloudfront.net/0901162ab78eb4ff2e9e5dc8b17c3824befc91a6/44ccd/images/copycode.svg",alt:"Copy service/networking/network-policy-default-deny-ingress.yaml to clipboard"}})]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NetworkPolicy\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deny"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policyTypes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Ingress\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("这样可以确保即使容器没有选择其他任何 NetworkPolicy，也仍然可以被隔离。 此策略不会更改默认的出口隔离行为。")]),t._v(" "),e("h3",{attrs:{id:"_6-2、默认允许所有入站流量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-2、默认允许所有入站流量"}},[t._v("#")]),t._v(" 6.2、默认允许所有入站流量")]),t._v(" "),e("p",[t._v("如果要允许所有流量进入某个名字空间中的所有 Pod（即使添加了导致某些 Pod 被视为 “隔离”的策略），则可以创建一个策略来明确允许该名字空间中的所有流量。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://raw.githubusercontent.com/kubernetes/website/main/content/zh/examples/service/networking/network-policy-allow-all-ingress.yaml",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("service/networking/network-policy-allow-all-ingress.yaml")]),t._v(" "),e("OutboundLink")],1),e("img",{attrs:{src:"https://d33wubrfki0l68.cloudfront.net/0901162ab78eb4ff2e9e5dc8b17c3824befc91a6/44ccd/images/copycode.svg",alt:"Copy service/networking/network-policy-allow-all-ingress.yaml to clipboard"}})]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NetworkPolicy\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" allow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("all"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ingress\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policyTypes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Ingress\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h3",{attrs:{id:"_6-3、默认拒绝所有出站流量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-3、默认拒绝所有出站流量"}},[t._v("#")]),t._v(" 6.3、默认拒绝所有出站流量")]),t._v(" "),e("p",[t._v("你可以通过创建选择所有容器但不允许来自这些容器的任何出站流量的 NetworkPolicy 来为名字空间创建 “default” 隔离策略。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://raw.githubusercontent.com/kubernetes/website/main/content/zh/examples/service/networking/network-policy-default-deny-egress.yaml",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("service/networking/network-policy-default-deny-egress.yaml")]),t._v(" "),e("OutboundLink")],1),e("img",{attrs:{src:"https://d33wubrfki0l68.cloudfront.net/0901162ab78eb4ff2e9e5dc8b17c3824befc91a6/44ccd/images/copycode.svg",alt:"Copy service/networking/network-policy-default-deny-egress.yaml to clipboard"}})]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NetworkPolicy\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deny"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("egress\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policyTypes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Egress\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被允许流出流量。 此策略不会更改默认的入站流量隔离行为。")]),t._v(" "),e("h3",{attrs:{id:"_6-4、默认允许所有出站流量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-4、默认允许所有出站流量"}},[t._v("#")]),t._v(" 6.4、默认允许所有出站流量")]),t._v(" "),e("p",[t._v("如果要允许来自名字空间中所有 Pod 的所有流量（即使添加了导致某些 Pod 被视为“隔离”的策略）， 则可以创建一个策略，该策略明确允许该名字空间中的所有出站流量。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://raw.githubusercontent.com/kubernetes/website/main/content/zh/examples/service/networking/network-policy-allow-all-egress.yaml",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("service/networking/network-policy-allow-all-egress.yaml")]),t._v(" "),e("OutboundLink")],1),e("img",{attrs:{src:"https://d33wubrfki0l68.cloudfront.net/0901162ab78eb4ff2e9e5dc8b17c3824befc91a6/44ccd/images/copycode.svg",alt:"Copy service/networking/network-policy-allow-all-egress.yaml to clipboard"}})]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NetworkPolicy\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" allow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("all"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("egress\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("egress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policyTypes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Egress\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h3",{attrs:{id:"_6-5、默认拒绝所有入口和所有出站流量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-5、默认拒绝所有入口和所有出站流量"}},[t._v("#")]),t._v(" 6.5、默认拒绝所有入口和所有出站流量")]),t._v(" "),e("p",[t._v("你可以为名字空间创建“默认”策略，以通过在该名字空间中创建以下 NetworkPolicy 来阻止所有入站和出站流量。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://raw.githubusercontent.com/kubernetes/website/main/content/zh/examples/service/networking/network-policy-default-deny-all.yaml",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("service/networking/network-policy-default-deny-all.yaml")]),t._v(" "),e("OutboundLink")],1),e("img",{attrs:{src:"https://d33wubrfki0l68.cloudfront.net/0901162ab78eb4ff2e9e5dc8b17c3824befc91a6/44ccd/images/copycode.svg",alt:"Copy service/networking/network-policy-default-deny-all.yaml to clipboard"}})]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NetworkPolicy\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deny"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("all\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policyTypes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Ingress\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Egress\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[t._v("此策略可以确保即使没有被其他任何 NetworkPolicy 选择的 Pod 也不会被 允许入站或出站流量。")]),t._v(" "),e("h2",{attrs:{id:"_7、sctp-支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、sctp-支持"}},[t._v("#")]),t._v(" 7、SCTP 支持")]),t._v(" "),e("p",[e("strong",[t._v("FEATURE STATE:")]),t._v(" "),e("code",[t._v("Kubernetes v1.20 [stable]")])]),t._v(" "),e("p",[t._v("作为一个稳定特性，SCTP 支持默认是被启用的。 要在集群层面禁用 SCTP，你（或你的集群管理员）需要为 API 服务器指定 "),e("code",[t._v("--feature-gates=SCTPSupport=false,...")]),t._v(" 来禁用 "),e("code",[t._v("SCTPSupport")]),t._v(" "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/feature-gates/",target:"_blank",rel:"noopener noreferrer"}},[t._v("特性门控"),e("OutboundLink")],1),t._v("。 启用该特性门控后，用户可以将 NetworkPolicy 的 "),e("code",[t._v("protocol")]),t._v(" 字段设置为 "),e("code",[t._v("SCTP")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("Note:")])]),t._v(" "),e("p",[t._v("你必须使用支持 SCTP 协议网络策略的 "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/#cni",target:"_blank",rel:"noopener noreferrer"}},[t._v("CNI"),e("OutboundLink")],1),t._v(" 插件。")]),t._v(" "),e("h2",{attrs:{id:"_8、针对某个端口范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、针对某个端口范围"}},[t._v("#")]),t._v(" 8、针对某个端口范围")]),t._v(" "),e("p",[e("strong",[t._v("FEATURE STATE:")]),t._v(" "),e("code",[t._v("Kubernetes v1.22 [beta]")])]),t._v(" "),e("p",[t._v("在编写 NetworkPolicy 时，你可以针对一个端口范围而不是某个固定端口。")]),t._v(" "),e("p",[t._v("这一目的可以通过使用 "),e("code",[t._v("endPort")]),t._v(" 字段来实现，如下例所示：")]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NetworkPolicy\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" multi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("egress\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" default\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("podSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matchLabels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("role")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" db\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("policyTypes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Egress\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("egress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("to")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ipBlock")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cidr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.0.0.0/24\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("32000")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("32768")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[t._v("上面的规则允许名字空间 "),e("code",[t._v("default")]),t._v(" 中所有带有标签 "),e("code",[t._v("role=db")]),t._v(" 的 Pod 使用 TCP 协议 与 "),e("code",[t._v("10.0.0.0/24")]),t._v(" 范围内的 IP 通信，只要目标端口介于 32000 和 32768 之间就可以。")]),t._v(" "),e("p",[t._v("使用此字段时存在以下限制：")]),t._v(" "),e("ul",[e("li",[t._v("作为一种 Beta 阶段的特性，端口范围设定默认是被启用的。要在整个集群 范围内禁止使用 "),e("code",[t._v("endPort")]),t._v(" 字段，你（或者你的集群管理员）需要为 API 服务器设置 "),e("code",[t._v("-feature-gates=NetworkPolicyEndPort=false,...")]),t._v(" 以禁用 "),e("code",[t._v("NetworkPolicyEndPort")]),t._v(" "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/feature-gates/",target:"_blank",rel:"noopener noreferrer"}},[t._v("特性门控"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("endPort")]),t._v(" 字段必须等于或者大于 "),e("code",[t._v("port")]),t._v(" 字段的值。")]),t._v(" "),e("li",[t._v("两个字段的设置值都只能是数字。")])]),t._v(" "),e("p",[e("strong",[t._v("Note:")])]),t._v(" "),e("p",[t._v("你的集群所使用的 "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/#cni",target:"_blank",rel:"noopener noreferrer"}},[t._v("CNI"),e("OutboundLink")],1),t._v(" 插件 必须支持在 NetworkPolicy 规约中使用 "),e("code",[t._v("endPort")]),t._v(" 字段。 如果你的"),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/",target:"_blank",rel:"noopener noreferrer"}},[t._v("网络插件"),e("OutboundLink")],1),t._v(" 不支持 "),e("code",[t._v("endPort")]),t._v(" 字段，而你指定了一个包含 "),e("code",[t._v("endPort")]),t._v(" 字段的 NetworkPolicy， 策略只对单个 "),e("code",[t._v("port")]),t._v(" 字段生效。")]),t._v(" "),e("h2",{attrs:{id:"_9、基于名字指向某名字空间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9、基于名字指向某名字空间"}},[t._v("#")]),t._v(" 9、基于名字指向某名字空间")]),t._v(" "),e("p",[e("strong",[t._v("FEATURE STATE:")]),t._v(" "),e("code",[t._v("Kubernetes 1.22 [stable]")])]),t._v(" "),e("p",[t._v("只要 "),e("code",[t._v("NamespaceDefaultLabelName")]),t._v(" "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/feature-gates/",target:"_blank",rel:"noopener noreferrer"}},[t._v("特性门控"),e("OutboundLink")],1),t._v(" 被启用，Kubernetes 控制面会在所有名字空间上设置一个不可变更的标签 "),e("code",[t._v("kubernetes.io/metadata.name")]),t._v("。该标签的值是名字空间的名称。")]),t._v(" "),e("p",[t._v("如果 NetworkPolicy 无法在某些对象字段中指向某名字空间，你可以使用标准的 标签方式来指向特定名字空间。")]),t._v(" "),e("h2",{attrs:{id:"_10、通过网络策略-至少目前还-无法完成的工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10、通过网络策略-至少目前还-无法完成的工作"}},[t._v("#")]),t._v(" 10、通过网络策略（至少目前还）无法完成的工作")]),t._v(" "),e("p",[t._v("到 Kubernetes 1.23 为止，NetworkPolicy API 还不支持以下功能，不过 你可能可以使用操作系统组件（如 SELinux、OpenVSwitch、IPTables 等等） 或者第七层技术（Ingress 控制器、服务网格实现）或准入控制器来实现一些 替代方案。 如果你对 Kubernetes 中的网络安全性还不太了解，了解使用 NetworkPolicy API 还无法实现下面的用户场景是很值得的。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("强制集群内部流量经过某公用网关（这种场景最好通过服务网格或其他代理来实现）；")])]),t._v(" "),e("li",[e("p",[t._v("与 TLS 相关的场景（考虑使用服务网格或者 Ingress 控制器）；")])]),t._v(" "),e("li",[e("p",[t._v("特定于节点的策略（你可以使用 CIDR 来表达这一需求不过你无法使用节点在 Kubernetes 中的其他标识信息来辩识目标节点）；")])]),t._v(" "),e("li",[e("p",[t._v("基于名字来选择服务（不过，你可以使用 "),e("a",{attrs:{href:"https://kubernetes.io/zh/docs/concepts/overview/working-with-objects/labels/",target:"_blank",rel:"noopener noreferrer"}},[t._v("标签"),e("OutboundLink")],1),t._v(" 来选择目标 Pod 或名字空间，这也通常是一种可靠的替代方案）；")])]),t._v(" "),e("li",[e("p",[t._v("创建或管理由第三方来实际完成的“策略请求”；")])]),t._v(" "),e("li",[e("p",[t._v("实现适用于所有名字空间或 Pods 的默认策略（某些第三方 Kubernetes 发行版本 或项目可以做到这点）；")])]),t._v(" "),e("li",[e("p",[t._v("高级的策略查询或者可达性相关工具；")])]),t._v(" "),e("li",[e("p",[t._v("生成网络安全事件日志的能力（例如，被阻塞或接收的连接请求）；")])]),t._v(" "),e("li",[e("p",[t._v("显式地拒绝策略的能力（目前，NetworkPolicy 的模型默认采用拒绝操作， 其唯一的能力是添加允许策略）；")])]),t._v(" "),e("li",[e("p",[t._v("禁止本地回路或指向宿主的网络流量（Pod 目前无法阻塞 localhost 访问， 它们也无法禁止来自所在节点的访问请求）。")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);