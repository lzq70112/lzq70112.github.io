(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{572:function(s,e,n){"use strict";n.r(e);var r=n(20),a=Object(r.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("kubeasz3部署K8S-node篇"),n("br")]),s._v(" "),n("h2",{attrs:{id:"_1、原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、原理"}},[s._v("#")]),s._v(" 1、原理")]),s._v(" "),n("ul",[n("li",[s._v("Kubelet")])]),s._v(" "),n("p",[s._v("负责本Node节点上的Pod的创建、修改、监控、删除等全生命周期管理，同时Kubelet定时“上报”本Node的状态信息到API Server里。")]),s._v(" "),n("ul",[n("li",[s._v("Proxy")])]),s._v(" "),n("p",[s._v("实现了Service的代理与软件模式的负载均衡器。")]),s._v(" "),n("p",[s._v("客户端通过Kubectl命令行工具或Kubectl Proxy来访问Kubernetes系统，在Kubernetes集群内部的客户端可以直接使用Kuberctl命令管理集群。Kubectl Proxy是API Server的一个反向代理，在Kubernetes集群外部的客户端可以通过Kubernetes Proxy来访问API Server。")]),s._v(" "),n("p",[s._v("API Server内部有一套完备的安全机制，包括认证、授权和准入控制等相关模块。")]),s._v(" "),n("h2",{attrs:{id:"_2、kubeasz3部署k8s-proxy配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、kubeasz3部署k8s-proxy配置"}},[s._v("#")]),s._v(" 2、kubeasz3部署K8S-proxy配置")]),s._v(" "),n("p",[s._v("kubeasz3部署K8S-proxy配置、会在每个非master的节点上部署haproxy 指向master")]),s._v(" "),n("p",[n("code",[s._v("vim /etc/haproxy/haproxy.cfg")])]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("listen kube_master\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:6443\n        mode tcp\n        option tcplog\n        option dontlognull\n        option dontlog-normal\n        balance roundrobin\n        server "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.22 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.22:6443 check inter 10s fall "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" rise "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weight "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        server "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.23 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.23:6443 check inter 10s fall "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" rise "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" weight "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[n("strong",[s._v("kube-proxy ipvs和iptables的异同")])]),s._v(" "),n("p",[s._v("iptables与IPVS都是基于Netfilter实现的，但因为定位不同，二者有着本质的差别：iptables是为防火墙而设计的；IPVS则专门用于高性能负载均衡，并使用更高效的数据结构（Hash表），允许几乎无限的规模扩张。")]),s._v(" "),n("p",[s._v("与iptables相比，IPVS拥有以下明显优势：")]),s._v(" "),n("ul",[n("li",[s._v("为大型集群提供了更好的可扩展性和性能；")]),s._v(" "),n("li",[s._v("支持比iptables更复杂的复制均衡算法（最小负载、最少连接、加权等）；")]),s._v(" "),n("li",[s._v("支持服务器健康检查和连接重试等功能；")]),s._v(" "),n("li",[s._v("可以动态修改ipset的集合，即使iptables的规则正在使用这个集合。")])]),s._v(" "),n("h3",{attrs:{id:"_2-1、iptables"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、iptables"}},[s._v("#")]),s._v(" 2-1、iptables")]),s._v(" "),n("p",[s._v("iptables作为kube-proxy的默认模式。iptables模式下的kube-proxy不再起到Proxy的作用，其核心功能：通过API Server的Watch接口实时跟踪Service与Endpoint的变更信息，并更新对应的iptables规则，Client的请求流量则通过iptables的NAT机制“直接路由”到目标Pod。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/121317001370.png",alt:"img"}})]),s._v(" "),n("h3",{attrs:{id:"_2-2、ipvs说明及"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、ipvs说明及"}},[s._v("#")]),s._v(" 2-2、ipvs说明及")]),s._v(" "),n("p",[n("strong",[s._v("LVS调度算法：")])]),s._v(" "),n("p",[n("strong",[s._v("1. 轮叫调度 rr")]),s._v("\n这种算法是最简单的，就是按依次循环的方式将请求调度到不同的服务器上，该算法最大的特点就是简单。轮询算法假设所有的服务器处理请求的能力都是一样的，调度器会将所有的请求平均分配给每个真实服务器，不管后端 RS 配置和处理能力，非常均衡地分发下去。")]),s._v(" "),n("p",[n("strong",[s._v("2. 加权轮叫 wrr")]),s._v("\n这种算法比 rr 的算法多了一个权重的概念，可以给 RS 设置权重，权重越高，那么分发的请求数越多，权重的取值范围 0 – 100。主要是对rr算法的一种优化和补充， LVS 会考虑每台服务器的性能，并给每台服务器添加要给权值，如果服务器A的权值为1，服务器B的权值为2，则调度到服务器B的请求会是服务器A的2倍。权值越高的服务器，处理的请求越多。")]),s._v(" "),n("p",[n("strong",[s._v("3. 最少链接 lc")]),s._v("\n这个算法会根据后端 RS 的连接数来决定把请求分发给谁，比如 RS1 连接数比 RS2 连接数少，那么请求就优先发给 RS1")]),s._v(" "),n("p",[n("strong",[s._v("4. 加权最少链接 wlc")]),s._v("\n这个算法比 lc 多了一个权重的概念。")]),s._v(" "),n("p",[n("strong",[s._v("5. 基于局部性的最少连接调度算法 lblc")]),s._v("\n这个算法是请求数据包的目标 IP 地址的一种调度算法，该算法先根据请求的目标 IP 地址寻找最近的该目标 IP 地址所有使用的服务器，如果这台服务器依然可用，并且有能力处理该请求，调度器会尽量选择相同的服务器，否则会继续选择其它可行的服务器")]),s._v(" "),n("p",[n("strong",[s._v("6. 复杂的基于局部性最少的连接算法 lblcr")]),s._v("\n记录的不是要给目标 IP 与一台服务器之间的连接记录，它会维护一个目标 IP 到一组服务器之间的映射关系，防止单点服务器负载过高。")]),s._v(" "),n("p",[n("strong",[s._v("7. 目标地址散列调度算法 dh")]),s._v("\n该算法是根据目标 IP 地址通过散列函数将目标 IP 与服务器建立映射关系，出现服务器不可用或负载过高的情况下，发往该目标 IP 的请求会固定发给该服务器。")]),s._v(" "),n("p",[n("strong",[s._v("8. 源地址散列调度算法 sh")]),s._v("\n与目标地址散列调度算法类似，但它是根据源地址散列算法进行静态分配固定的服务器资源。")]),s._v(" "),n("p",[n("strong",[s._v("流程")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/clipboard.png",alt:"img"}})]),s._v(" "),n("p",[n("strong",[s._v("k8s的service和endpoine是如何关联和相互影响的？")]),s._v("\n1、 api-server创建service对象，与service绑定的pod地址：称之为endpoints（kubectl get ep可以查看）\n2、服务发现方面：kube-proxy监控service后端endpoint的动态变化，并且维护service和endpoint的映射关系")]),s._v(" "),n("h3",{attrs:{id:"_2-3、修改轮巡方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、修改轮巡方式"}},[s._v("#")]),s._v(" 2-3、修改轮巡方式")]),s._v(" "),n("p",[n("code",[s._v("vim /etc/systemd/system/kube-proxy.service")]),s._v(" # 修改轮巡方式一")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[Unit]\nDescription=Kubernetes Kube-Proxy Server\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=network.target\n\n[Service]\n# kube-proxy 根据 --cluster-cidr 判断集群内部和外部流量，指定 --cluster-cidr 或 --masquerade-all 选项后，kube-proxy 会对访问 Service IP 的请求做 SNAT\nWorkingDirectory=/var/lib/kube-proxy\nExecStart=/opt/kube/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/kube-proxy-config.yaml \\\n  #--ipvs-scheduler=sh\n  # 修改ipvs 调度轮巡方式\nRestart=always\nRestartSec=5\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\n~                               \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[n("code",[s._v("vim /var/lib/kube-proxy/kube-proxy-config.yaml")]),s._v(" #如果是/etc/systemd/system/kube-proxy.service 中是以yaml加载配置可以改")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('kind: KubeProxyConfiguration\napiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 192.168.2.25\nclientConnection:\n  kubeconfig: "/etc/kubernetes/kube-proxy.kubeconfig"\nclusterCIDR: "172.20.0.0/16"\nconntrack:\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nhealthzBindAddress: 192.168.2.25:10256\nhostnameOverride: "192.168.2.25"\nmetricsBindAddress: 192.168.2.25:10249\nmode: "ipvs"\nkubeProxyIPTablesConfiguration:\n  masqueradeAll: false\nkubeProxyIPVSConfiguration:\n  scheduler: sh\n  excludeCIDRs: []\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[n("code",[s._v("ipvsadm -L -n")]),s._v(" #查看算法调度")])])}),[],!1,null,null,null);e.default=a.exports}}]);