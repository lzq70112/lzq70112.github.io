(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{510:function(s,a,e){"use strict";e.r(a);var t=e(20),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("本文主要面试提问记录，积少成多吧")]),s._v(" "),e("p",[s._v("会了巩固，不会就学")]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("PS:")]),s._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),e("p",[s._v("很多问题看似很难，换个方式问，可能很简单，多刷题吧，了解题型风格。")]),s._v(" "),e("p",[s._v("对于运维来说还有的问题，看配置文件啥意思可能直接就脱口而出，毕竟大部分时间都在看。但是问起来用那个配置参数得时候，就大小便失禁了。平时可以强化记忆，配置完自己跟自己讲一边。")]),s._v(" "),e("p",[s._v("回答不出问题的时候，可能是场景不到位吧，毕竟看完架构就知道他们的疼点在哪，实在回答不出的可以问问是什么场景，什么问题，什么需求，给出实际解决方案。")])]),s._v(" "),e("h2",{attrs:{id:"_1、基础篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、基础篇"}},[s._v("#")]),s._v(" 1、基础篇")]),s._v(" "),e("h3",{attrs:{id:"_1-1、-服务器的io瓶颈是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、-服务器的io瓶颈是什么"}},[s._v("#")]),s._v(" 1.1、 服务器的IO瓶颈是什么")]),s._v(" "),e("p",[s._v("A:")]),s._v(" "),e("p",[e("strong",[s._v("一、 CPU问题")])]),s._v(" "),e("ol",[e("li",[s._v("考虑使用更高级的CPU代替目前的CPU")]),s._v(" "),e("li",[s._v("对于多个CPU，考虑CPU之间的负载分配")]),s._v(" "),e("li",[s._v("考虑在其他体系上设计系统，例如增加前置机、设置并行服务器等")])]),s._v(" "),e("p",[e("strong",[s._v("二、内存和高速缓存")])]),s._v(" "),e("ol",[e("li",[s._v("内存的优化包括操作系统、数据库、应用程序的内存优化")]),s._v(" "),e("li",[s._v("过多的分页与交换可能降低系统的性能")]),s._v(" "),e("li",[s._v("内存分配也是影响系统性能的主要原因")]),s._v(" "),e("li",[s._v("保证保留列表具有较大的邻接内存块")]),s._v(" "),e("li",[s._v("调整数据块缓存区大小（用数据块的个数表示）是一个重要内容")]),s._v(" "),e("li",[s._v("将最频繁使用的数据保存在存储区中")])]),s._v(" "),e("p",[e("strong",[s._v("三、磁盘（I/O）资源问题")])]),s._v(" "),e("ol",[e("li",[s._v("磁盘读写进度对数据库系统是至关重要的，数据库对象在物理设备上的合理分布能改善性能")]),s._v(" "),e("li",[s._v("磁盘镜像会减慢磁盘写的速度")]),s._v(" "),e("li",[s._v("通过把日志和数据库对象分布在独立的设备上，可以提高系统的性能")]),s._v(" "),e("li",[s._v("把不同的数据库放在不同的硬盘上，可以提高读写速度。建议把数据库、回滚段、日志放在不同的设备上")]),s._v(" "),e("li",[s._v("把表放在一块硬盘上，把非簇的索引放在另一块硬盘上，保证物理读写更快。")])]),s._v(" "),e("p",[e("strong",[s._v("四、调整配置参数")])]),s._v(" "),e("ol",[e("li",[s._v("包括操作系统和数据库的参数配置")]),s._v(" "),e("li",[s._v("并行操作资源限制的参数（并发用户的数目、会话数）")]),s._v(" "),e("li",[s._v("影响资源开销的参数")]),s._v(" "),e("li",[s._v("与I/O有关的参数")])]),s._v(" "),e("p",[e("strong",[s._v("五、优化应用系统网络设置")])]),s._v(" "),e("ol",[e("li",[s._v("可以通过数组接口来减少网络呼叫。不是一次提取一行，而是在单个往来往返中提取10行，这样效率较高")]),s._v(" "),e("li",[s._v("调整会话数据单元的缓冲区大小")]),s._v(" "),e("li",[s._v("共享服务进程比专用服务进程提供更好的性能")])]),s._v(" "),e("h2",{attrs:{id:"_2、nginx篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、nginx篇"}},[s._v("#")]),s._v(" 2、nginx篇")]),s._v(" "),e("h3",{attrs:{id:"_2-1、nginx指定文件路径有两种方式root和alias"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、nginx指定文件路径有两种方式root和alias"}},[s._v("#")]),s._v(" 2.1、nginx指定文件路径有两种方式root和alias")]),s._v(" "),e("p",[s._v("root与alias主要区别在于nginx如何解释location后面的uri，这会使两者分别以不同的方式将请求映射到服务器文件上。")]),s._v(" "),e("p",[e("strong",[s._v("[root]")]),s._v(" "),e("strong",[s._v("语法：root path\n默认值：root html\n配置段：http、server、location、if")])]),s._v(" "),e("p",[e("strong",[s._v("[alias]")]),s._v(" "),e("strong",[s._v("语法：alias path\n配置段：location")])]),s._v(" "),e("p",[e("strong",[s._v("配置ROOT")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("location ~ ^/weblogs/ {\n\nroot /data/weblogs/www.ttlsa.com;\n\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("如果一个请求的URI是/weblogs/httplogs/www.ttlsa.com-access.log时，web服务器将会返回服务器上的/data/weblogs/www.ttlsa.com/weblogs/httplogs/www.ttlsa.com-access.log的文件。\nroot会根据完整的URI请求来映射，也就是/path/uri。")]),s._v(" "),e("p",[e("strong",[s._v("配置alias")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("location ^~ /binapp/ { \n\n alias /data/statics/bin/apps/;\n\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("alias会把location后面配置的路径丢弃掉，把当前匹配到的目录指向到指定的目录。如果一个请求的URI是/binapp/a.ttlsa.com/favicon时，web服务器将会返回服务器上的/data/statics/bin/apps/a.ttlsa.com/favicon.jgp的文件。")]),s._v(" "),e("p",[e("strong",[s._v("区别")])]),s._v(" "),e("p",[s._v("alias 只能作用在location中，而root可以存在server、http和location中。")]),s._v(" "),e("p",[s._v("alias 后面必须要用 “/” 结束，否则会找不到文件，而 root 则对 ”/” 可有可无。")]),s._v(" "),e("h2",{attrs:{id:"_3、k8s篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、k8s篇"}},[s._v("#")]),s._v(" 3、K8S篇")]),s._v(" "),e("h3",{attrs:{id:"_3-1、fannel的通信模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、fannel的通信模型"}},[s._v("#")]),s._v(" 3.1、fannel的通信模型")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://hongwei888.com/pages/b5e1551/#_3%E3%80%81fannel%E7%9A%84%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9E%8B%E5%88%86%E6%9E%90",target:"_blank",rel:"noopener noreferrer"}},[s._v("本站已经验证过了"),e("OutboundLink")],1),s._v(" 表述的不是很好，没记在脑子里，后续重写。")]),s._v(" "),e("h3",{attrs:{id:"_3-2、k8s的核心组件及其功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、k8s的核心组件及其功能"}},[s._v("#")]),s._v(" 3.2、K8S的核心组件及其功能")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("kubernetes api server : 提供kubernetes各类资源对象（如pod, rc, service等）的增删改查以及watch丶list等http rest接口,")])]),s._v(" "),e("li",[e("p",[s._v("kubernetes controller manager： 通过api server提供的rest接口实时监控集群中特定资源的状态变化, 确保集群始终处于预期的工作状态")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1.Replication controller: 确保在任何时候集群中某个RC关联的pod副本数量都保持预设值, 注意前提条件是RestartPolicy=Always; pod的扩容缩容,滚动更新\n2.Node controller: 通过api server实时获取node的相关信息, 实现管理和监控集群中各个NODE的相关控制功能\n3.ResourceQuota controller: 确保指定对象在任何时候都不会超量占用系统物理资源，对容器丶pod丶namespace级别, 分别可以限制资源配额， \n    kubernetes的配额管理是通过admission control准入控制来控制的, 提供两种方式实现配额约束, 分别是limitranger和resourcequota, limitranger作用域pod和container, ResourceQuota作用于namespace里的各类资源\n4.Namespace controller： 定时通过api server读取namespace信息, 实现对namespace里的资源管理和控制\n5.Service controller 和Endpoints controller\n    Endpoints 表示一个service对应所有pod副本的访问地址; 负责监控维护service和对应的pod副本的变化, \n    kube-proxy 需要获取每个service的endpoints, 实现services的负载均衡\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("kubernetes scheduler： 将待调度的pod按照特定的算法和调度策略绑定到集群中某个合适的node上,并将绑定信息写入到etcd中,")])]),s._v(" "),e("li",[e("p",[s._v("kubernetes kubelet\n每个node节点都会安装一个kubelet进程, 用于处理master下发到本节点的任务（通过api 监听etcd资源）, 管理pod（容器健康检查, 通过livenessprobe探针和readinessProbe探针）,会向api server注册节点信息, 定时向master汇报节点资源的使用情况, 通过cadvisor（后面采用metric server）监控容器和节点资源")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1.metrics server 提供核心指标, 包括node和pod的cpu和内存使用数据\n2.custom metrics 自定义指标由prometheus采集和存储\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("kubernetes kube-proxy： 实现service功能, 通过iptables的nat转换规则实现")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1. kubernetes1.2版本开始,将iptables作为kube-proxy的默认模式, 通过api server的watch接口实时跟踪service和endpoint的变更信息, 并更新对应的iptables规则, client的请求流量则通过iptables的NAT机制直接路由到目标pod\n2. iptables缺陷： service和pod数量过多, 对导致iptables规则过多, 导致性能下降\n3. kubernetes1.8版本引入ipvs, ipvs无法完全取代iptables, 在service工作在nodeport模式下\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"_3-3、k8s的亲和度与污点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、k8s的亲和度与污点"}},[s._v("#")]),s._v(" 3.3、K8S的亲和度与污点")]),s._v(" "),e("p",[s._v("这边涉及到一些概念，回答的不是很好，重新梳理")]),s._v(" "),e("p",[e("RouterLink",{attrs:{to:"/pages/b5e15699/"}},[s._v("k8s的亲和度、污点")])],1),s._v(" "),e("h3",{attrs:{id:"_3-4、需要将node的节点的pod驱逐出去的方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、需要将node的节点的pod驱逐出去的方案"}},[s._v("#")]),s._v(" 3.4、需要将NODE的节点的POD驱逐出去的方案")]),s._v(" "),e("p",[s._v("1、将NODE置为非调度状态")]),s._v(" "),e("p",[e("code",[s._v("kubectl drain <node name>")])]),s._v(" "),e("p",[s._v("2、添加新的服务")]),s._v(" "),e("p",[s._v("3、触发探针")]),s._v(" "),e("h2",{attrs:{id:"_4、版本控制与发布"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、版本控制与发布"}},[s._v("#")]),s._v(" 4、版本控制与发布")]),s._v(" "),e("h3",{attrs:{id:"_4-1、蓝绿部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、蓝绿部署"}},[s._v("#")]),s._v(" 4.1、蓝绿部署")]),s._v(" "),e("p",[e("strong",[s._v("蓝绿部署的优点：")]),s._v("\n这种方式的好处在你可以始终很放心的去部署inactive环境，如果出错并不影响生产环境的服务，如果切换后出现问题，也可以在非常短的时间内把再做一次切换，就完成了回滚。而且同时在线的只有一个版本。蓝绿部署无需停机，并且风险较小。")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("部署版本1的应用（一开始的状态），所有外部请求的流量都打到这个版本上。")])]),s._v(" "),e("li",[e("p",[s._v("部署版本2的应用，版本2的代码与版本1不同(新功能、Bug修复等)。")])]),s._v(" "),e("li",[e("p",[s._v("将流量从版本1切换到版本2。`")])])]),s._v(" "),e("p",[s._v("如版本2测试正常，就删除版本1正在使用的资源（例如实例），从此正式用版本2。\n从过程不难发现，在部署的过程中，应用始终在线。并且，新版本上线的过程中，并没有修改老版本的任何内容，在部署期间，老版本的状态不受影响。这样风险很小，并且，只要老版本的资源不被删除，理论上，可以在任何时间回滚到老版本。\n"),e("strong",[s._v("蓝绿部署的弱点：")])]),s._v(" "),e("p",[s._v("使用蓝绿部署需要注意的一些细节包括：")]),s._v(" "),e("ol",[e("li",[s._v("当切换到蓝色环境时，需要妥当处理未完成的业务和新的业务。如果数据库后端无法处理，会是一个比较麻烦的问题。\n有可能会出现需要同时处理“微服务架构应用”和“传统架构应用”的情况，如果在蓝绿部署中协调不好这两者，还是有可能导致服务停止；")]),s._v(" "),e("li",[s._v("需要提前考虑数据库与应用部署同步迁移/回滚的问题。\n蓝绿部署需要有基础设施支持。")]),s._v(" "),e("li",[s._v("在非隔离基础架构（ VM 、 Docker 等）上执行蓝绿部署，蓝色环境和绿色环境有被摧毁的风险。\n另外，这种方式不好的地方还在于冗余产生的额外维护、配置的成本，以及服务器本身运行的开销。")])]),s._v(" "),e("p",[e("strong",[s._v("蓝绿部署适用的场景：")])]),s._v(" "),e("ol",[e("li",[s._v("不停止老版本，额外搞一套新版本，等测试发现新版本OK后，删除老版本。")]),s._v(" "),e("li",[s._v("蓝绿发布是一种用于升级与更新的发布策略，部署的最小维度是容器，而发布的最小维度是应用。")]),s._v(" "),e("li",[s._v("蓝绿发布对于增量升级有比较好的支持，但是对于涉及数据表结构变更等等不可逆转的升级，并不完全合适用蓝绿发布来实现，需要结合一些业务的逻辑以及数据迁移与回滚的策略才可以完全满足需求。")])]),s._v(" "),e("h2",{attrs:{id:"_5、docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、docker"}},[s._v("#")]),s._v(" 5、docker")]),s._v(" "),e("h3",{attrs:{id:"_5-1、docker-namespace与cgroup介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、docker-namespace与cgroup介绍"}},[s._v("#")]),s._v(" 5.1、docker——NameSpace与Cgroup介绍")]),s._v(" "),e("p",[e("strong",[s._v("Namespace概念")]),s._v("\n虚拟化的技术就是用来解决宿主机与虚拟机之间的耦合问题（简称“解耦”）,传统虚拟化技术是属于完全解耦的，而docker这种虚拟化技术是属于半解耦的。")]),s._v(" "),e("p",[s._v("耦合：就是指两个或两个以上的体系或两种运动形式间通过相互作用而彼此影响以至联合起来的现象；\n解耦：接触耦合、冲突现象；\nDocker通过使用Namespace（命名空间）这项技术实现了容器与容器之间、容器与docker host之间的")]),s._v(" "),e("p",[e("strong",[s._v("cgroup概念")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1）资源限制；Cgroup可以对进程组使用的资源总额进行限制；\n2）优先级分配；通过分配的CPU时间片数量以及硬盘IO带宽大小，实际相当于控制了进程运行的优先级别；\n3）资源统计；Cgroup可以统计系统资源使用量，比如CPU使用时间，内存使用量等，用于按量计费。同时还支持挂起功能，也就是说通过cgroup吧所有资源限制起来，对资源都不能使用，注意这并不意味说我们的程序不能使用了，只是不能使用资源，处于等待状态；\n4）进程控制；可以对进程组执行挂起、恢复等操作；\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("其实做过，问的时候完全想不起来了，一直都是搞K8S的限制")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@localhost ~]# docker run -it --name test4 -m 200M --memory-swap 300M centos:7 \n#创建一个容器，并限制容器最多使用200M内存和100M的交换分区\n#--memory-swap：这个值是物理内存加Swap的值\n[root@3de51b7474c5 /]# cat /sys/fs/cgroup/memory/memory.limit_in_bytes \n209715200\n#查看物理内存是否生效，单位是字节，可以自行进行换算验证\n[root@3de51b7474c5 /]# cat /sys/fs/cgroup/memory/memory.memsw.limit_in_bytes \n314572800\n#查看物理内存和交换分区内存是否生效，单位是字节，这个值是物理内存加Swap分区的值\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"_6、redis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、redis"}},[s._v("#")]),s._v(" 6、redis")]),s._v(" "),e("h3",{attrs:{id:"_6-1、如何监控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、如何监控"}},[s._v("#")]),s._v(" 6.1、如何监控")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/qq_28417845/article/details/104588694",target:"_blank",rel:"noopener noreferrer"}},[s._v("redis监控"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("info 命令去抓取参数，进行图像展示。")]),s._v(" "),e("h2",{attrs:{id:"_7、ci-cd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、ci-cd"}},[s._v("#")]),s._v(" 7、CI/CD")]),s._v(" "),e("h3",{attrs:{id:"_7-1、jenkins如何调用k8s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、jenkins如何调用k8s"}},[s._v("#")]),s._v(" 7.1、jenkins如何调用k8s")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://blog.51cto.com/u_14234542/2495985",target:"_blank",rel:"noopener noreferrer"}},[s._v("回答脚本调用"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("后续会整理一份直接调用的笔记")]),s._v(" "),e("h2",{attrs:{id:"_8、网络及安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、网络及安全"}},[s._v("#")]),s._v(" 8、网络及安全")]),s._v(" "),e("h3",{attrs:{id:"_8-1、如何防止udp攻击"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-1、如何防止udp攻击"}},[s._v("#")]),s._v(" 8.1、如何防止UDP攻击")]),s._v(" "),e("p",[s._v("传统服务器jumpever、fail2ban、开源工具 脚本抓取IP封禁")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://help.aliyun.com/document_detail/215582.html?spm=5176.22414175.sslink.3.1c522f9dVrCsxl",target:"_blank",rel:"noopener noreferrer"}},[s._v("我个人可能觉得问的是云主机上的服务，阿里云高防"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"_9、java的回收与监控"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9、java的回收与监控"}},[s._v("#")]),s._v(" 9、java的回收与监控")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.pianshen.com/article/47231339091/",target:"_blank",rel:"noopener noreferrer"}},[s._v("真的不太懂java，只说了一个jstack"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"_100、总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_100、总结"}},[s._v("#")]),s._v(" 100、总结")]),s._v(" "),e("p",[s._v("2021.9.18")]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("最近确实太忙，没有去准备好面试，有时间面试都不错了。。。")]),s._v(" "),e("p",[s._v("很多东西有做过，有印象但是说不出来，表达的也不好，，大功未成的感觉。。")]),s._v(" "),e("p",[s._v("运维东西太多了，但是面试的时候，好好把自己简历的写的服务，项目拿出来翻一翻，看一看很重要！")]),s._v(" "),e("p",[s._v("运维弄得语法，shell、命令基本一个不会问，不要浪费时间看回看了。")])])}),[],!1,null,null,null);a.default=r.exports}}]);