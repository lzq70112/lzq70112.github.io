(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{575:function(s,a,e){"use strict";e.r(a);var n=e(20),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("kubeasz3部署K8S-calico篇")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://docs.projectcalico.org/about/about-calico",target:"_blank",rel:"noopener noreferrer"}},[s._v("caclio官方网站"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"_1、原理架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、原理架构"}},[s._v("#")]),s._v(" 1、原理架构")]),s._v(" "),e("p",[s._v("Calico 是一种容器之间互通的网络方案。在虚拟化平台中，比如 OpenStack、Docker 等都需要实现 workloads 之间互连，但同时也需要对容器做隔离控制，就像在 Internet 中的服务仅开放80端口、公有云的多租户一样，提供隔离和管控机制。而在多数的虚拟化平台实现中，通常都使用二层隔离技术来实现容器的网络，这些二层的技术有一些弊端，比如需要依赖 VLAN、bridge 和隧道等技术，其中 bridge 带来了复杂性，vlan 隔离和 tunnel 隧道则消耗更多的资源并对物理环境有要求，随着网络规模的增大，整体会变得越加复杂。我们尝试把 Host 当作 Internet 中的路由器，同样使用 BGP 同步路由，并使用 iptables 来做安全访问策略，最终设计出了 Calico 方案。")]),s._v(" "),e("p",[s._v("c")]),s._v(" "),e("h2",{attrs:{id:"_2、kubeasz3部署k8s-calico"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、kubeasz3部署k8s-calico"}},[s._v("#")]),s._v(" 2、kubeasz3部署K8S-calico")]),s._v(" "),e("p",[e("code",[s._v("vim /etc/kubeasz/clusters/k8s-01/hosts")]),s._v(" #修改network组件")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('CLUSTER_NETWORK="calico"\n# 修改calico\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("code",[s._v("vim /etc/kubeasz/clusters/k8s-01/config.yml")]),s._v(" #配置")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# ------------------------------------------- calico\n# [calico]设置 CALICO_IPV4POOL_IPIP=“off”,可以提高网络性能，条件限制详见 docs/setup/calico.md\nCALICO_IPV4POOL_IPIP: "Always"\n\n# [calico]设置 calico-node使用的host IP，bgp邻居通过该地址建立，可手工指定也可以自动发现\nIP_AUTODETECTION_METHOD: "can-reach={{ groups[\'kube_master\'][0] }}"\n\n# [calico]设置calico 网络 backend: brid, vxlan, none\nCALICO_NETWORKING_BACKEND: "brid"\n\n# [calico]更新支持calico 版本: [v3.3.x] [v3.4.x] [v3.8.x] [v3.15.x]\ncalico_ver: "v3.15.3"\n\n# [calico]calico 主版本\ncalico_ver_main: "{{ calico_ver.split(\'.\')[0] }}.{{ calico_ver.split(\'.\')[1] }}"\n\n# [calico]离线镜像tar包\ncalico_offline: "calico_{{ calico_ver }}.tar"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("code",[s._v('ansible-playbook -i "clusters/k8s-01/hosts" -e "@clusters/k8s-01/config.yml" "playbooks/06.network.yml"')]),s._v(" #安装calico组件")]),s._v(" "),e("p",[e("code",[s._v("kubectl delete -f /opt/kube/kube-system/flannel.yaml")]),s._v(" #kubeasz3不支持自动部署其他组件时删除已有组件，自己手动删除flannel")]),s._v(" "),e("p",[e("code",[s._v("calicoctl node status")]),s._v(" #查看node status")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Calico process is running.\n\nIPv4 BGP status\n+--------------+-------------------+-------+----------+-------------+\n| PEER ADDRESS |     PEER TYPE     | STATE |  SINCE   |    INFO     |\n+--------------+-------------------+-------+----------+-------------+\n| 192.168.2.23 | node-to-node mesh | up    | 13:54:13 | Established |\n| 192.168.2.25 | node-to-node mesh | up    | 13:54:13 | Established |\n| 192.168.2.26 | node-to-node mesh | up    | 13:54:13 | Established |\n+--------------+-------------------+-------+----------+-------------+\n\nIPv6 BGP status\nNo IPv6 peers found.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h2",{attrs:{id:"_3、k8s-calico的通信模型分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、k8s-calico的通信模型分析"}},[s._v("#")]),s._v(" 3、k8s-calico的通信模型分析")]),s._v(" "),e("p",[s._v("Calico是一个纯三层的网络解决方案，为容器提供多node间的访问通信，calico将每一个node节点都当做为一个路 由器(router)，各节点通过BGP(Border Gateway Protocol) 边界网关协议学习并在node节点生成路由规则，从而 将不同node节点上的pod连接起来进行通信。")]),s._v(" "),e("p",[s._v("BGP是一个去中心化的协议，它通过自动学习和维护路由表实现网络的可用性，但是并不是所有的网络都支持 BGP，另外为了跨网络实现更大规模的网络管理，calico 还支持IP-in-IP的叠加模型，简称IPIP，IPIP可以实现跨不 同网段建立路由通信，但是会存在安全性问题，其在内核内置，可以通过Calico的配置文件设置是否启用IPIP，在 公司内部如果k8s的node节点没有跨越网段建议关闭IPIP。")]),s._v(" "),e("p",[s._v('IPIP是一种将各Node的路由之间做一个tunnel，再把两个网络连接起来的模式。启用IPIP模式时，Calico将在各 Node上创建一个名为"tunl0"的虚拟网络接口。  BGP模式则直接使用物理机作为虚拟路由路（vRouter），不再创建额外的tunnel。')]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/1060878-20190413152300545-538840176.png",alt:"img"}})]),s._v(" "),e("ul",[e("li",[e("p",[s._v("[ ] Felix：calico的agent，运行在每一台node节点上，其主要是维护路由规则、汇报当前节点状态以确保pod的夸主机 通信。")])]),s._v(" "),e("li",[e("p",[s._v("[ ] BGP Client：每台node都运行，其主要负责监听node节点上由felix生成的路由信息，然后通过BGP协议广播至其他剩 余的node节点，从而相互学习路由实现pod通信。")])]),s._v(" "),e("li",[e("p",[s._v("[ ] Route Reflector：集中式的路由反射器，calico v3.3开始支持，当Calico BGP客户端将路由从其FIB(Forward Information dataBase，转发信息库)通告到Route Reflector时，Route Reflector会将这些路由通告给部署 集群中的其他节点，Route Reflector专门用于管理BGP网络路由规则，不会产生pod数据通信。")])]),s._v(" "),e("li",[e("p",[s._v("[ ] 注：calico默认工作模式是BGP的node-to-node mesh，如果要使用Route Reflector需要进行相关配置。")]),s._v(" "),e("p",[s._v("https://docs.projectcalico.org/v3.4/usage/routereflector")]),s._v(" "),e("p",[s._v("https://docs.projectcalico.org/v3.2/usage/routereflector/calico-routereflector")])])]),s._v(" "),e("p",[e("code"),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/1192846-20200623215951632-1033068669.png",alt:"img"}})]),s._v(" "),e("p",[e("strong",[s._v("查看node-2路由信息")])]),s._v(" "),e("p",[e("code",[s._v("route -n")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Kernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.2.1     0.0.0.0         UG    0      0        0 ens33\n172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0\n172.20.39.0     192.168.2.22    255.255.255.192 UG    0      0        0 tunl0\n172.20.84.128   192.168.2.25    255.255.255.192 UG    0      0        0 tunl0\n172.20.205.192  192.168.2.23    255.255.255.192 UG    0      0        0 tunl0\n172.20.247.0    0.0.0.0         255.255.255.192 U     0      0        0 *\n172.20.247.1    0.0.0.0         255.255.255.255 UH    0      0        0 calic712ccc0206\n172.20.247.2    0.0.0.0         255.255.255.255 UH    0      0        0 caliea3a37aa060\n172.20.247.3    0.0.0.0         255.255.255.255 UH    0      0        0 calie3c92c244fc\n172.20.247.4    0.0.0.0         255.255.255.255 UH    0      0        0 cali081d5ee965a\n192.168.2.0     0.0.0.0         255.255.255.0   U     0      0        0 ens33\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("查看node-1路由信息")])]),s._v(" "),e("p",[e("code",[s._v("root@node-1:~# route -n")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Kernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.2.1     0.0.0.0         UG    0      0        0 ens33\n172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0\n172.20.39.0     192.168.2.22    255.255.255.192 UG    0      0        0 tunl0\n172.20.84.128   0.0.0.0         255.255.255.192 U     0      0        0 *\n172.20.84.129   0.0.0.0         255.255.255.255 UH    0      0        0 cali857215ff1dd\n172.20.84.130   0.0.0.0         255.255.255.255 UH    0      0        0 cali86ca089869a\n172.20.84.131   0.0.0.0         255.255.255.255 UH    0      0        0 calif0c5e8b9a43\n172.20.84.132   0.0.0.0         255.255.255.255 UH    0      0        0 cali8c43260cf06\n172.20.84.133   0.0.0.0         255.255.255.255 UH    0      0        0 cali48d5f8950c9\n172.20.84.134   0.0.0.0         255.255.255.255 UH    0      0        0 calib4f77b8b110\n172.20.205.192  192.168.2.23    255.255.255.192 UG    0      0        0 tunl0\n172.20.247.0    192.168.2.26    255.255.255.192 UG    0      0        0 tunl0\n192.168.2.0     0.0.0.0         255.255.255.0   U     0      0        0 ens33\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("查看node-2网卡信息")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("11: tunl0@NONE: <NOARP,UP,LOWER_UP> mtu 1440 qdisc noqueue state UNKNOWN group default qlen 1\n    link/ipip 0.0.0.0 brd 0.0.0.0\n    inet 172.20.247.0/32 brd 172.20.247.0 scope global tunl0\n       valid_lft forever preferred_lft forever\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("查看node-2的pod路径")])]),s._v(" "),e("p",[e("code",[s._v("traceroute 172.20.84.129")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("traceroute to 172.20.84.129 (172.20.84.129), 30 hops max, 46 byte packets\n 1  192-168-2-26.node-local-dns.kube-system.svc.cluster.local (192.168.2.26)  0.005 ms  0.006 ms  0.004 ms\n 2  172.20.84.128 (172.20.84.128)  0.212 ms  0.270 ms  1.071 ms\n 3  172.20.84.129 (172.20.84.129)  0.335 ms  0.572 ms  0.583 ms          \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("查看node-2的pod路由表")])]),s._v(" "),e("p",[e("code",[s._v("/ # route -n")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Kernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         169.254.1.1     0.0.0.0         UG    0      0        0 eth0\n169.254.1.1     0.0.0.0         255.255.255.255 UH    0      0        0 eth0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("第一条路由的意思是：去往任何网段的数据包都发往网管169.254.1.1，然后从eth0网卡发送出去。")]),s._v(" "),e("h3",{attrs:{id:"_3-1、calico-ipip模式不同pod通信流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、calico-ipip模式不同pod通信流程"}},[s._v("#")]),s._v(" 3-1、calico-ipip模式不同pod通信流程")]),s._v(" "),e("p",[s._v("从字面来理解，就是把一个IP数据包又套在一个IP包里，即把 IP 层封装到 IP 层的一个 tunnel。它的作用其实基本上就相当于一个基于IP层的网桥！一般来说，普通的网桥是基于mac层的，根本不需 IP，而这个 ipip 则是通过两端的路由做一个 tunnel，把两个本来不通的网络通过点对点连接起来。")]),s._v(" "),e("ol",[e("li",[s._v("pod如何数据都将发送给网关 172.20.84.129 ——》169.254.1.1")]),s._v(" "),e("li",[s._v("node节点根据路由信息发送 tunl0   172.20.84.128/26 ——》192.168.2.25（节点IP）")]),s._v(" "),e("li",[s._v("对端node拆包 根据路由信息 172.20.84.129——》cali857215ff1dd")]),s._v(" "),e("li",[s._v("node 会将数据传给对应的pod")])]),s._v(" "),e("p",[s._v("pod 网卡另一端的设备好号是9，在node上查看编号为9的网络设备，可以发现该网络设备就是cali857215ff1dd")]),s._v(" "),e("p",[s._v("根据数据包的封装顺序，应该是在pod1 ping pod2的ICMP包外面多封装了一层主机之间的数据包。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/1060878-20190414173605263-65569449.png",alt:"img"}})]),s._v(" "),e("p",[s._v("IPIP的连接方式：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/1060878-20190415165144848-1984358878.png",alt:"img"}})]),s._v(" "),e("h3",{attrs:{id:"_3-2、calico模式不同pod通信流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、calico模式不同pod通信流程"}},[s._v("#")]),s._v(" 3-2、calico模式不同pod通信流程")]),s._v(" "),e("p",[s._v("边界网关协议（Border Gateway Protocol, BGP）是互联网上一个核心的去中心化自治路由协议。它通过维护IP路由表或‘前缀’表来实现自治系统（AS）之间的可达性，属于矢量路由协议。BGP不使用传统的内部网关协议（IGP）的指标，而使用基于路径、网络策略或规则集来决定路由。因此，它更适合被称为矢量性协议，而不是路由协议。BGP，通俗的讲就是讲接入到机房的多条线路（如电信、联通、移动等）融合为一体，实现多线单IP，BGP 机房的优点：服务器只需要设置一个IP地址，最佳访问路由是由网络上的骨干路由器根据路由跳数与其它技术指标来确定的，不会占用服务器的任何系统。")]),s._v(" "),e("p",[s._v("BGP的连接方式：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/1060878-20190415165320714-135136611.png",alt:"img"}})]),s._v(" "),e("p",[e("code",[s._v("root@node-1:~# route -n")]),s._v(" #可以看出已经没有tunnl0的网卡了")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Kernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.2.1     0.0.0.0         UG    0      0        0 ens33\n172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 docker0\n172.20.84.135   0.0.0.0         255.255.255.255 UH    0      0        0 calif0c5e8b9a43\n172.20.84.136   0.0.0.0         255.255.255.255 UH    0      0        0 calib4f77b8b110\n172.20.84.137   0.0.0.0         255.255.255.255 UH    0      0        0 cali48d5f8950c9\n172.20.84.138   0.0.0.0         255.255.255.255 UH    0      0        0 cali8c43260cf06\n172.20.84.139   0.0.0.0         255.255.255.255 UH    0      0        0 cali86ca089869a\n192.168.2.0     0.0.0.0         255.255.255.0   U     0      0        0 ens33\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("ol",[e("li",[s._v("pod如何数据都将发送给网关 172.20.84.129 ——》169.254.1.1")]),s._v(" "),e("li",[s._v("node节点根据路由信息直接发送 172.20.84.128/26 ——》192.168.2.25（节点IP）")]),s._v(" "),e("li",[s._v("对端node拆包 根据路由信息 172.20.84.129——》cali857215ff1dd")]),s._v(" "),e("li",[s._v("node 会将数据传给对应的pod")])]),s._v(" "),e("h2",{attrs:{id:"_4、kubeasz3部署calico-关闭ipip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、kubeasz3部署calico-关闭ipip"}},[s._v("#")]),s._v(" 4、kubeasz3部署calico，关闭ipip")]),s._v(" "),e("p",[e("code",[s._v("vim /etc/kubeasz/clusters/k8s-01/config.yml")]),s._v(" #配置")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# [calico]设置 CALICO_IPV4POOL_IPIP=“off”,可以提高网络性能，条件限制详见 docs/setup/calico.md\nCALICO_IPV4POOL_IPIP: "off"\nIP_AUTODETECTION_METHOD: "can-reach={{ groups[\'kube_master\'][0] }}"\nCALICO_NETWORKING_BACKEND: "brid"\ncalico_ver: "v3.15.3"\ncalico_ver_main: "{{ calico_ver.split(\'.\')[0] }}.{{ calico_ver.split(\'.\')[1] }}"\ncalico_offline: "calico_{{ calico_ver }}.tar"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("code",[s._v('ansible-playbook -i "clusters/k8s-01/hosts" -e "@clusters/k8s-01/config.yml" "playbooks/06.network.yml"')]),s._v(" #安装calico组件")])])}),[],!1,null,null,null);a.default=t.exports}}]);