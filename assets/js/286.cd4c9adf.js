(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{757:function(s,a,t){"use strict";t.r(a);var n=t(20),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1、脚本的解释器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、脚本的解释器"}},[s._v("#")]),s._v(" 1、脚本的解释器")]),s._v(" "),t("p",[s._v("shell脚本开头（第一行）会指出由哪个程序（解释器）来解释脚本中的内容。这一行必须在脚本顶端的第一行，如果不是第一行则为注释。不管写什么脚本最好养成好习惯，都加上解释器名称，例如：#!/bin/bash。”#!”又称为幻数")]),s._v(" "),t("p",[s._v("sh和bash的区别为：sh为bash的软链接，这里推荐用标准写法#!/bin/bash")]),s._v(" "),t("p",[s._v("下面是"),t("a",{attrs:{href:"https://so.csdn.net/so/search?from=pc_blog_highlight&q=Linux",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux"),t("OutboundLink")],1),s._v("中常用脚本语言开头的编码写法，不同语言脚本的开头一般都要加上如下相应语言的开头标识内容。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/awk")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sed")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/tcl")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/expect")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/perl")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("注意：如果脚本的开头不指定解释器，那么脚本就会使用系统默认的解释器执行，这样在某些情况下就会出现错误，所以一定要养成良好的习惯，在脚本的第一行指定解释器。")]),s._v(" "),t("h2",{attrs:{id:"_2、脚本注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、脚本注释"}},[s._v("#")]),s._v(" 2、脚本注释")]),s._v(" "),t("p",[s._v("在shell脚本中跟在”#”号后面的内容为注释，用来对脚本进行说明，注释部分不会被执行，仅仅是方便人们查看和理解脚本。必须要养成写注释的良好习惯，可以方便团队协作。同时也方便自己以后查看更加方便。")]),s._v(" "),t("p",[s._v("尽量使用英文注释，防止切换系统环境后出现中文乱码问题")]),s._v(" "),t("h2",{attrs:{id:"_3、shell脚本的执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、shell脚本的执行"}},[s._v("#")]),s._v(" 3、shell脚本的执行")]),s._v(" "),t("p",[s._v("当shell脚本以非交互式运行时，它会先查找环境变量ENV，该变量指定了一个环境文件（通常是.bashrc），然后从该环境变量文件开始执行，当读取了ENV文件后，shell才开始执行shell脚本中的内容。")]),s._v(" "),t("p",[t("img",{attrs:{src:"asset/image-20211119172848038.png",alt:"image-20211119172848038"}})]),s._v(" "),t("p",[s._v("Shell脚本的执行通常可以采用以下几种方式：")]),s._v(" "),t("ul",[t("li",[s._v("bash script-name或sh script-name\n这是当脚本文件本身没有可执行权限(即文件权限属性x位为-号)时常使用的方法，或者脚本文件开头没有指定解释器时需要使用的方法；")])]),s._v(" "),t("p",[s._v("举例说明：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim test.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'this is a shell scripts!'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sh test.sh")]),s._v("\nthis is a shell scripts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash test.sh ")]),s._v("\nthis is a shell scripts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("path/script-name或./script-name\n指在当前路径下执行脚本(脚本需要有执行权限)，需要将脚本文件的权限先改为可执行(即文件权限属性加x位)，具体方法为chmod+x script-name。然后通过脚本绝对路径或相对路径就可以直接执行脚本了；")])]),s._v(" "),t("p",[s._v("举例说明：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./test.sh")]),s._v("\n-bash: ./test.sh: 权限不够\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# chmod u+x test.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./test.sh")]),s._v("\nthis is a shell scripts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("这种方法比较麻烦一些！每次编写完脚本都必须给脚本一个执行的权限，否则将会提示“权限不够”的错误。")]),s._v(" "),t("ul",[t("li",[s._v("source script-name或.script-name\n这种方法通常是使用source或“.”(点号)读入或加载指定的Shell脚本文件(如san.sh)，然后，依次执行指定的Shell脚本文件san.sh中的所有语句。这些语句将在当前父Shell脚本father.sh进程中运行(其他几种模式都会启动新的进程执行子脚本)。因此，使用source或“.”可以将san.sh自身脚本中的变量值或函数等的返回值传递到当前父Shell脚本father.sh中使用。")])]),s._v(" "),t("p",[s._v("举例说明：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# chmod u-x test.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ll test.sh")]),s._v("\n-rw-r--r--. "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("月  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" 03:09 test.sh\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# . test.sh")]),s._v("\nthis is a shell scripts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# source test.sh")]),s._v("\nthis is a shell scripts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_4、shell脚本开发基本规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、shell脚本开发基本规范"}},[s._v("#")]),s._v(" 4、shell脚本开发基本规范")]),s._v(" "),t("h3",{attrs:{id:"_4-1、开头指定脚本解释器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、开头指定脚本解释器"}},[s._v("#")]),s._v(" 4.1、开头指定脚本解释器")]),s._v(" "),t("p",[s._v("#!/bin/sh 或 #!/bin/bash")]),s._v(" "),t("h3",{attrs:{id:"_4-2、开头注意加时间、作者、联系邮箱、脚本作用等信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、开头注意加时间、作者、联系邮箱、脚本作用等信息"}},[s._v("#")]),s._v(" 4.2、开头注意加时间、作者、联系邮箱、脚本作用等信息")]),s._v(" "),t("p",[s._v("可配置vim编辑文件时自动加上以上信息，方法是修改~/.vimrc配置文件")]),s._v(" "),t("h3",{attrs:{id:"_4-3、脚本中尽量不要使用中文注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3、脚本中尽量不要使用中文注释"}},[s._v("#")]),s._v(" 4.3、脚本中尽量不要使用中文注释")]),s._v(" "),t("p",[s._v("尽量使用英文注释，防止切换系统环境后出现中文乱码问题")]),s._v(" "),t("h3",{attrs:{id:"_4-4、shell脚本使用-sh结尾"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4、shell脚本使用-sh结尾"}},[s._v("#")]),s._v(" 4.4、shell脚本使用.sh结尾")]),s._v(" "),t("p",[s._v("例：script-name.sh，这样方便自己或他人识别这是shell脚本文件")]),s._v(" "),t("h2",{attrs:{id:"_5、代码书写习惯"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、代码书写习惯"}},[s._v("#")]),s._v(" 5、代码书写习惯")]),s._v(" "),t("h3",{attrs:{id:"_5-1、成对的符号尽量一次性写出来-防止遗漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、成对的符号尽量一次性写出来-防止遗漏"}},[s._v("#")]),s._v(" 5.1、成对的符号尽量一次性写出来，防止遗漏")]),s._v(" "),t("p",[s._v("有很多人在编写shell脚本时，由于各种原因多写或漏写了符号，导致最终运行脚本时出错，从而浪费不必要的时间进行排错。例如：大括号{}，中括号[]，小括号()，单引号’’，双引号””，反引号``，等成对出现的符号尽量一次性写出来，然后在其中写入合适的代码即可，这样就避免了符号的遗漏导致的报错问题。")]),s._v(" "),t("h3",{attrs:{id:"_5-2、括号的保留空格习惯"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2、括号的保留空格习惯"}},[s._v("#")]),s._v(" 5.2、括号的保留空格习惯")]),s._v(" "),t("p",[s._v("中括号[ ]两端需要留有空格，不然会报错。书写时即可留出空格然后书写内容。如果不知道大括号{}，中括号[]，小括号()，到底哪种括号需要两端留空格，可以在书写这些括号的时候两端都保留空格来进行书写，这样可以有效避免因空格导致的各种错误。")]),s._v(" "),t("h3",{attrs:{id:"_5-3、流程控制语句一次性书写完再添加内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3、流程控制语句一次性书写完再添加内容"}},[s._v("#")]),s._v(" 5.3、流程控制语句一次性书写完再添加内容")]),s._v(" "),t("p",[s._v("例1：if语句格式一次书写完成")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("if 条件内容;then\n\n  条件成立后执行的代码\nfi\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("例2：for循环格式一次书写完成")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("for条件内容\ndo\n     条件成立后执行的代码\ndone\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("提示：while、until、case等语句也是一样")]),s._v(" "),t("h3",{attrs:{id:"_5-4、代码缩进提高可读性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4、代码缩进提高可读性"}},[s._v("#")]),s._v(" 5.4、代码缩进提高可读性")]),s._v(" "),t("p",[s._v("例如：下面的代码输出1-50之间所有的偶数")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#!/bin/bash\nfor i in $(seq 50);\ndo\n    if (( $i%2 == 0 ));then\n        echo $i\n    fi\ndone\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_6、变量的命名规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、变量的命名规则"}},[s._v("#")]),s._v(" 6、变量的命名规则")]),s._v(" "),t("p",[s._v("1、变量名必须是以字母或下划线”_”开头，后面跟字母、数字或下划线。")]),s._v(" "),t("p",[s._v("2、变量名中间不能有空格，可以使用下划线连接。")]),s._v(" "),t("p",[s._v("3、变量名不要使用问号”?”、星号”*”或其他特殊字符。")]),s._v(" "),t("p",[s._v("4、变量名不能使用标点符号，更不能使用bash里的关键字，例如：if，for，while，do等关键字。")]),s._v(" "),t("p",[s._v("5、变量名的命名尽量要有意义，最好能够让别人一眼能看出什么意思。")]),s._v(" "),t("p",[s._v("6、自定义变量尽量不要和系统环境变量冲突。")]),s._v(" "),t("p",[s._v("7、局部变量最好使用local进行定义。")]),s._v(" "),t("h2",{attrs:{id:"_7、-特殊的shell变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、-特殊的shell变量"}},[s._v("#")]),s._v(" 7、 特殊的Shell变量")]),s._v(" "),t("h3",{attrs:{id:"_7-1、环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、环境变量"}},[s._v("#")]),s._v(" 7.1、环境变量")]),s._v(" "),t("p",[s._v("由系统提前创建，用来设置用户的工作环境\n配置文件： /etc/profile、~/.bashprofile\n常见的环境变量\nPWD 、 PATH、 USER、 HOME、 SHELL")]),s._v(" "),t("h3",{attrs:{id:"_7-2、位置变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-2、位置变量"}},[s._v("#")]),s._v(" 7.2、位置变量")]),s._v(" "),t("p",[s._v("表示为$n，n为1~9之间的数字")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第一个位置变量的值:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第二个位置变量的值:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("expr $1 + $2"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"求和数为:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sum")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h3",{attrs:{id:"_7-3、预定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-3、预定义变量"}},[s._v("#")]),s._v(" 7.3、预定义变量")]),s._v(" "),t("p",[s._v("$#：命令行中位置变量的个数\n$*：所有位置变量的内容\n$？：上一条命令执行后返回的状态，当返回值为0时代表执行正常，非0只表示执行出错\n$0：当前执行的进程/程序名")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第一个位置变量的值:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第二个位置变量的值:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expr")]),s._v(" $1 + $2"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"求和数为:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sum")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"脚本名称:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"详细数字:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"参数的个数:'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"_8、循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、循环"}},[s._v("#")]),s._v(" 8、循环")]),s._v(" "),t("h3",{attrs:{id:"_8-1、for"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-1、for"}},[s._v("#")]),s._v(" 8.1、for")]),s._v(" "),t("p",[s._v("for的语法结构如下：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" 变量 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 串行\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n   执行命令\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##1到10的数组 {1..10} ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##seq 用于产生从某个数到另外一个数之间的所有整数。 $( seq 1 10 )")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将字符串变成数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#line是一段字符格式如 name1,var1;var2;var3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ingress_name_group")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $line"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ingress_name_group")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("OLD_IFS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$IFS")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("IFS")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('";"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ingress_arr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ingress_name_group")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("IFS")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$OLD_IFS")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("arr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ingress_arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"_8-2、while"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-2、while"}},[s._v("#")]),s._v(" 8.2、while")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" kuangl\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${kuangl}")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" /home/kuangl/scripts/testfile\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_9、-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、-函数"}},[s._v("#")]),s._v(" 9、 函数")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("Shell 函数定义的语法格式如下：\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    statements\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("return value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n对各个部分的说明：\nfunction是 Shell 中的关键字，专门用来定义函数；\nname是函数名；\nstatements是函数要执行的代码，也就是一组语句；\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" value表示函数的返回值，其中 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" 是 Shell 关键字，专门用在函数中返回一个值；这一部分可以写也可以不写。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"_10、awk-高级用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、awk-高级用法"}},[s._v("#")]),s._v(" 10、awk 高级用法")]),s._v(" "),t("h3",{attrs:{id:"_10-1、awk-使用变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-1、awk-使用变量"}},[s._v("#")]),s._v(" 10.1、awk 使用变量")]),s._v(" "),t("p",[s._v("在 awk 的脚本程序中，支持使用变量来存取值。awk 支持两种不同类型的变量：")]),s._v(" "),t("ul",[t("li",[s._v("内建变量：awk 本身就创建好，用户可以直接拿来用的变量，这些变量用来存放处理数据文件中的某些字段和记录的信息。")]),s._v(" "),t("li",[s._v("自定义变量：awk 支持用户自己创建变量。")])]),s._v(" "),t("h3",{attrs:{id:"_10-2、内建变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-2、内建变量"}},[s._v("#")]),s._v(" 10.2、内建变量")]),s._v(" "),t("p",[s._v("awk 程序使用内建变量来引用程序数据里的一些特殊功能。常见的一些内建变量，包括上一节介绍的数据字段变量（$0、$1、$2...$n）以及表 1 、表 2 中所示的这些变量。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("变量")]),s._v(" "),t("th",[s._v("功能")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("FIELDWIDTHS")]),s._v(" "),t("td",[s._v("由空格分隔的一列数字，定义了每个数据字段的确切宽度。")])]),s._v(" "),t("tr",[t("td",[s._v("FNR")]),s._v(" "),t("td",[s._v("当前输入文档的记录编号，常在有多个输入文档时使用。")])]),s._v(" "),t("tr",[t("td",[s._v("NR")]),s._v(" "),t("td",[s._v("输入流的当前记录编号。")])]),s._v(" "),t("tr",[t("td",[s._v("FS")]),s._v(" "),t("td",[s._v("输入字段分隔符")])]),s._v(" "),t("tr",[t("td",[s._v("RS")]),s._v(" "),t("td",[s._v("输入记录分隔符，默认为换行符 \\n。")])]),s._v(" "),t("tr",[t("td",[s._v("OFS")]),s._v(" "),t("td",[s._v("输出字段分隔符，默认为空格。")])]),s._v(" "),t("tr",[t("td",[s._v("ORS")]),s._v(" "),t("td",[s._v("输出记录分隔符，默认为换行符 \\n。")])])])]),s._v(" "),t("p",[s._v("在表 1 中，变量 FS 和 OFS 定义了 awk 如何处理数据流中的数据字段。我们已经知道了如何使用变量 FS 来定义记录中的字段分隔符，变量 OFS 具备相同的功能，只不过是用在 print 命令的输出上，例如：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat data1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data11,data12,data13,data14,data15"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data21,data22,data23,data24,data25"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data31,data32,data33,data34,data35"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# awk \'BEGIN{FS=","; OFS="-"} {print $1,$2,$3}\' data1')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data11-data12-data13"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data21-data22-data23"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data31-data32-data33"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# awk \'BEGIN{FS=","; OFS="--"} {print $1,$2,$3}\' data1')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data11--data12--data13"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data21--data22--data23"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("data31--data32--data33"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("多字符分割")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F ‘"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("’ ‘"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("’ data\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -F ‘"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("’ ‘"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("’ data\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("table",[t("thead",[t("tr",[t("th",[s._v("变量名")]),s._v(" "),t("th",[s._v("功能")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("ARGC")]),s._v(" "),t("td",[s._v("命令行参数个数。")])]),s._v(" "),t("tr",[t("td",[s._v("ARGIND")]),s._v(" "),t("td",[s._v("当前文件在 ARGC 中的位置。")])]),s._v(" "),t("tr",[t("td",[s._v("ARGV")]),s._v(" "),t("td",[s._v("包含命令行参数的数组。")])]),s._v(" "),t("tr",[t("td",[s._v("CONVFMT")]),s._v(" "),t("td",[s._v("数字的转换格式，默认值为 %.6g。")])]),s._v(" "),t("tr",[t("td",[s._v("ENVIRON")]),s._v(" "),t("td",[s._v("当前 shell 环境变量及其值组成的关联数组。")])]),s._v(" "),t("tr",[t("td",[s._v("ERRNO")]),s._v(" "),t("td",[s._v("当读取或关闭输入文件发生错误时的系统错误号。")])]),s._v(" "),t("tr",[t("td",[s._v("FILENAME")]),s._v(" "),t("td",[s._v("当前输入文档的名称。")])]),s._v(" "),t("tr",[t("td",[s._v("FNR")]),s._v(" "),t("td",[s._v("当前数据文件中的数据行数。")])]),s._v(" "),t("tr",[t("td",[s._v("IGNORECASE")]),s._v(" "),t("td",[s._v("设成非 0 值时，忽略 awk 命令中出现的字符串的字符大小写。")])]),s._v(" "),t("tr",[t("td",[s._v("NF")]),s._v(" "),t("td",[s._v("数据文件中的字段总数。")])]),s._v(" "),t("tr",[t("td",[s._v("NR")]),s._v(" "),t("td",[s._v("已处理的输入记录数。")])]),s._v(" "),t("tr",[t("td",[s._v("OFMT")]),s._v(" "),t("td",[s._v("数字的输出格式，默认值为 %.6g。")])]),s._v(" "),t("tr",[t("td",[s._v("RLENGTH")]),s._v(" "),t("td",[s._v("由 match 函数所匹配的子字符串的长度。")])]),s._v(" "),t("tr",[t("td",[s._v("TSTART")]),s._v(" "),t("td",[s._v("由 match 函数所匹配的子字符串的起始位置。")])])])]),s._v(" "),t("p",[s._v("其中，FNR 和 NR 变量虽然类似，但又略有不同。FNR 变量含有当前数据文件中已处理过的记录数，NR 变量则含有已处理过的记录总数。举个例子：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat data1")]),s._v("\ndata11,data12,data13,data14,data15\ndata21,data22,data23,data24,data25\ndata31,data32,data33,data34,data35\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# awk '")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" BEGIN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("FS"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FNR="')]),s._v("FNR,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NR="')]),s._v("NR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" END"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("print "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"There were"')]),s._v(",NR,"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"records processed"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("' data1 data1\ndata11 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FNR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\ndata21 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FNR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\ndata31 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FNR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\ndata11 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FNR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\ndata21 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FNR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\ndata31 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("FNR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\nThere were "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" records processed\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("由此可以看出，当只使用一个数据文件作为输入时，FNR 和 NR 的值是相同的；如果使用多个数据文件作为输入，FNR 的值会在处理每个数据文件时被重置，而 NR 的值则会继续计数直到处理完所有的数据文件。")]),s._v(" "),t("h3",{attrs:{id:"_10-3、自定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-3、自定义变量"}},[s._v("#")]),s._v(" 10.3、自定义变量")]),s._v(" "),t("p",[s._v("和其他典型的编程语言一样，awk 允许用户定义自己的变量在脚本程序中使用。awk 自定义变量名可以是任意数目的字母、数字和下划线，但不能以数字开头。更重要的是，awk 变量名区分大小写。")]),s._v(" "),t("p",[s._v("举个简单的例子：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# awk '")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" BEGIN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("testing")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is a test"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" print testing\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("testing")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" print testing\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("'\nThis is a "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("外部引入变量传入awk内")]),s._v(" "),t("p",[s._v("解决这个问题，可以用 -v 命令行参数，它可以实现在 BEGIN 代码之前设定变量。在命令行上，-v 命令行参数必须放在脚本代码之前，如下所示：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -v "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ingress_name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$arr")]),s._v('"')]),s._v(" -F"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{\t\n\tprint $2"="ingress_name >> "paths_ingress.txt"\n}\'')]),s._v(" single_path.txt\t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_10-4、awk-使用数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-4、awk-使用数组"}},[s._v("#")]),s._v(" 10.4、awk 使用数组")]),s._v(" "),t("p",[s._v("为了在单个变量中存储多个值，许多编程语言都提供数组，awk 使用关联数组提供数组功能。")]),s._v(" "),t("p",[s._v("关联数组跟数字数组不同之处在于，它的索引值可以是任意文本字符串。用户不需要用连续的数字来标识数组中的数据元素；相反，关联数组用各种字符串来引用值。每个索引字符串都必须能够唯一地标识出赋给它的数据元素。")]),s._v(" "),t("p",[s._v("如果你熟悉其他编程语言的话，其实关联数组和散列表、字典的用法类似。")]),s._v(" "),t("h3",{attrs:{id:"_10-5、关联数组的定义和使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-5、关联数组的定义和使用"}},[s._v("#")]),s._v(" 10.5、关联数组的定义和使用")]),s._v(" "),t("p",[s._v("在 awk 脚本程序中，定义一个数组变量可以使用标准复制语句，其基本格式为：")]),s._v(" "),t("p",[t("code",[s._v("var[index]=element")])]),s._v(" "),t("p",[s._v("数组变量也是变量，也可以使用其进行基本的算术运算，例如：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# awk 'BEGIN{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" var"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("34")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" var"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" total "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" var"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" + var"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" print total\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("'\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("37")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_10-6、关联数组的遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-6、关联数组的遍历"}},[s._v("#")]),s._v(" 10.6、关联数组的遍历")]),s._v(" "),t("p",[s._v("在 awk 中遍历关联数组，可以用 for 语句的一种特殊形式：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("var "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  statements\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这个 for 语句会在每次循环时将关联数组 array 的下一个索引值赋给变量 var，然后执行一遍 statements。")]),s._v(" "),t("p",[s._v("再次强调，整个遍历过程中，传给 var 的都是每个数组元素的索引值（也就是 index），不是数组元素的值。")]),s._v(" "),t("p",[s._v("举个例子：")]),s._v(" "),t("p",[s._v("[root@localhost ~]# awk 'BEGIN{")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('\\> var["a"] = 1\n\\> var["g"] = 2\n\\> var["m"] = 3\n\\> var["u"] = 4\n\\> for (test in var)\n\\> {\n\\>  print "Index:",test," - Value:",var[test]\n\\> }\n\\> }\'\nIndex: u - Value: 4\nIndex: m - Value: 3\nIndex: a - Value: 1\nIndex: g - Value: 2\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("注意，索引值不会按任何特定顺序返回，但它们都能够指向对应的数据元素值。")]),s._v(" "),t("h3",{attrs:{id:"_10-7、awk使用循环结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-7、awk使用循环结构"}},[s._v("#")]),s._v(" 10.7、awk使用循环结构")]),s._v(" "),t("p",[s._v("awk 脚本程序中，可以使用 while、do-while、for 这 3 种循环结构，它们各自的基本格式分别如表 3 所示。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("基本格式")]),s._v(" "),t("th",[s._v("实例")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("while (条件) {   运行代码； }")]),s._v(" "),t("td",[s._v("[root@localhost ~]# cat data5 130 120 135 160 113 140 145 170 215 [root@localhost ~]# awk '{ > total = 0 > i = 1 > while (i < 4) > { >  total += $i >  i++ > } > avg = total / 3 > print \"Average:\",avg > }' data5 Average: 128.333 Average: 137.667 Average: 176.667")])]),s._v(" "),t("tr",[t("td",[s._v("do { 运行代码； }while(条件)")]),s._v(" "),t("td",[s._v("[root@localhost ~]# awk '{ > total = 0 > i = 1 > do > { >  total += $i >  i++ > } while (total < 150) > print total }' data5 250 160 315")])]),s._v(" "),t("tr",[t("td",[s._v("for(变量；条件；计数器) {   运行代码； }")]),s._v(" "),t("td",[s._v("[root@localhost ~]# awk '{ > total = 0 > for (i = 1; i < 4; i++) > { >  total += $i > } > avg = total / 3 > print \"Average:\",avg > }' data5 Average: 128.333 Average: 137.667 Average: 176.667")])])])]),s._v(" "),t("p",[s._v("从表 3 中可以看出，awk 支持使用的循环结构的用法和 C 语言完全一样，除此之外，awk 还支持使用 break（跳出循环）、continue（终止当前循环）关键字，其用法和 C 语言中也完全相同，这里不再过多赘述，读者可以阅读《"),t("a",{attrs:{href:"http://c.biancheng.net/c/32/",target:"_blank",rel:"noopener noreferrer"}},[s._v("C语言循环结构和选择结构"),t("OutboundLink")],1),s._v("》一章系统学习。")]),s._v(" "),t("h3",{attrs:{id:"_10-8、awk使用函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-8、awk使用函数"}},[s._v("#")]),s._v(" 10.8、awk使用函数")]),s._v(" "),t("h4",{attrs:{id:"内建函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内建函数"}},[s._v("#")]),s._v(" 内建函数")]),s._v(" "),t("p",[s._v("和内建变量类似，awk 也提供了不少内建函数，可进行一些常见的数学、字符串以及时间函数运算，如表 4 所示。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("函数分类")]),s._v(" "),t("th",[s._v("函数原型")]),s._v(" "),t("th",[s._v("函数功能")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("数学函数")]),s._v(" "),t("td",[s._v("atan2(x, y)")]),s._v(" "),t("td",[s._v("x/y 的反正切，x 和 y 以弧度为单位。")])]),s._v(" "),t("tr",[t("td",[s._v("cos(x)")]),s._v(" "),t("td",[s._v("x 的余弦，x 以弧度为单位。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("exp(x)")]),s._v(" "),t("td",[s._v("x 的指数函数。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("int(x)")]),s._v(" "),t("td",[s._v("x 的整数部分，取靠近零一侧的值。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("log(x)")]),s._v(" "),t("td",[s._v("x 的自然对数。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("srand(x)")]),s._v(" "),t("td",[s._v("为计算随机数指定一个种子值。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("rand()")]),s._v(" "),t("td",[s._v("比 0 大比 1 小的随机浮点值。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("sin(x)")]),s._v(" "),t("td",[s._v("x 的正弦，x 以弧度为单位。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("sqrt(x)")]),s._v(" "),t("td",[s._v("x 的平方根。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("位运算函数")]),s._v(" "),t("td",[s._v("and(v1, v2)")]),s._v(" "),t("td",[s._v("执行值 v1 和 v2 的按位与运算。")])]),s._v(" "),t("tr",[t("td",[s._v("compl(val)")]),s._v(" "),t("td",[s._v("执行 val 的补运算。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("lshift(val, count)")]),s._v(" "),t("td",[s._v("将值 val 左移 count 位。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("or(v1, v2)")]),s._v(" "),t("td",[s._v("执行值 v1 和 v2 的按位或运算。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("rshift(val, count)")]),s._v(" "),t("td",[s._v("将值 val 右移 count 位。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("xor(v1, v2)")]),s._v(" "),t("td",[s._v("执行值 v1 和 v2 的按位异或运算。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("字符串函数")]),s._v(" "),t("td",[s._v("asort(s [,d])")]),s._v(" "),t("td",[s._v("将数组 s 按数据元素值排序。索引值会被替换成表示新的排序顺序的连续数字。另外，如果指定了 d，则排序后的数组会存储在数组 d 中。")])]),s._v(" "),t("tr",[t("td",[s._v("asorti(s [,d])")]),s._v(" "),t("td",[s._v("将数组 s 按索引值排序。生成的数组会将索引值作为数据元素值，用连续数字索引来表明排序顺序。另外如果指定了 d，排序后的数组会存储在数组 d 中。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("gensub(r, s, h [, t])")]),s._v(" "),t("td",[s._v("查找变量 $0 或目标字符串 t（如果提供了的话）来匹配正则表达式 r。如果 h 是一个以 g 或 G 开头的字符串，就用 s 替换掉匹配的文本。如果 h 是一个数字，它表示要替换掉第 h 处 r 匹配的地方。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("gsub(r, s [,t])")]),s._v(" "),t("td",[s._v("查找变量 $0 或目标字符串 t（如果提供了的话）来匹配正则表达式 r。如果找到了，就全部替换成字符串 s。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("index(s, t)")]),s._v(" "),t("td",[s._v("返回字符串 t 在字符串 s 中的索引值，如果没找到的话返回 0。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("length([s])")]),s._v(" "),t("td",[s._v("返回字符串 s 的长度；如果没有指定的话，返回 $0 的长度。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("match(s, r [,a])")]),s._v(" "),t("td",[s._v("返回字符串 s 中正则表达式 r 出现位置的索引。如果指定了数组 a，它会存储 s 中匹配正则表达式的那部分。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("split(s, a [,r])")]),s._v(" "),t("td",[s._v("将 s 用 FS 字符或正则表达式 r（如果指定了的话）分开放到数组 a 中，并返回字段的总数。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("sprintf(format, variables)")]),s._v(" "),t("td",[s._v("用提供的 format 和 variables 返回一个类似于 printf 输出的字符串。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("sub(r, s [,t])")]),s._v(" "),t("td",[s._v("在变量 $0 或目标字符串 t 中查找正则表达式 r 的匹配。如果找到了，就用字符串 s 替换掉第一处匹配。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("substr(s, i [,n])")]),s._v(" "),t("td",[s._v("返回 s 中从索引值 i 开始的 n 个字符组成的子字符串。如果未提供 n，则返回 s 剩下的部分。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("tolower(s)")]),s._v(" "),t("td",[s._v("将 s 中的所有字符转换成小写。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("toupper(s)")]),s._v(" "),t("td",[s._v("将 s 中的所有字符转换成大写。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("时间函数")]),s._v(" "),t("td",[s._v("mktime(datespec)")]),s._v(" "),t("td",[s._v("将一个按 YYYY MM DD HH MM SS [DST] 格式指定的日期转换成时间戳值。")])]),s._v(" "),t("tr",[t("td",[s._v("strftime(format [,timestamp])")]),s._v(" "),t("td",[s._v("将当前时间的时间戳或 timestamp（如果提供了的话）转化格式化日期（采用 shell 函数 date() 的格式）。")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("systime()")]),s._v(" "),t("td",[s._v("返回当前时间的时间戳。")]),s._v(" "),t("td")])])]),s._v(" "),t("p",[s._v("时间戳指的是格林威治时间，即从 1970年1月1日8时1起到现在的总秒数。")]),s._v(" "),t("h4",{attrs:{id:"自定义函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义函数"}},[s._v("#")]),s._v(" 自定义函数")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\' BEGIN{OFS=";"} function  hello(){ print "hello";}  {hello()  }\'')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);