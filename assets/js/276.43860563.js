(window.webpackJsonp=window.webpackJsonp||[]).push([[276],{746:function(s,n,t){"use strict";t.r(n);var a=t(20),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"nginx配置文件参数详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置文件参数详解"}},[s._v("#")]),s._v(" nginx配置文件参数详解")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义Nginx运行的用户和用户组")]),s._v("\nuser  www  www"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动进程,通常设置成和cpu的数量相等")]),s._v("\nworker_processes  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nworker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为每个进程分配cpu，上例中将8个进程分配到8个cpu，当然可以写多个，或者将一个进程分配到多个cpu。")]),s._v("\nworker_rlimit_nofile  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10240")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该指令是当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n的值保持一致。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 全局错误日志及PID文件")]),s._v("\nerror_log  /usr/local/nginx/logs/error.log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误日志定义等级，[ debug | info | notice | warn | error | crit ]")]),s._v("\npid        /usr/local/nginx/nginx.pid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 工作模式及连接数上限")]),s._v("\nevents "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能.")]),s._v("\nworker_connections  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102400")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 单个后台worker process进程的最大并发链接数 （最大连接数=连接数*进程数）")]),s._v("\nmulti_accept  on"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 尽可能多的接受请求.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定http服务器，利用它的反向代理功能提供负载均衡支持")]),s._v("\nhttp "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定mime类型,类型由mime.type文件定义")]),s._v("\ninclude       mime.types"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndefault_type  application/octet-stream"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定日志格式")]),s._v("\naccess_log    /usr/local/nginx/log/nginx/access.log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsendfile      on"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用必须设为 on")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#autoindex  on;")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启目录列表访问，合适下载服务器，默认关闭。")]),s._v("\ntcp_nopush on"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 防止网络阻塞")]),s._v("\nkeepalive_timeout "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# keepalive超时时间，客户端到服务器端的连接持续有效时间，当出现对服务器的后继请求时，keepalive-timeout功能可避免建立或重新建立连接。")]),s._v("\ntcp_nodelay   on"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 提高数据的实时响应性")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启gzip压缩")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gzip")]),s._v(" on"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ngzip_min_length  1k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ngzip_buffers     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 16k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ngzip_http_version "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ngzip_comp_level "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩级别大小，最大为9，值越小，压缩后比例越小，CPU处理更快。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 值越大，消耗CPU比较高。")]),s._v("\ngzip_types       text/plain application/x-javascript text/css application/xml"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ngzip_vary on"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nclient_max_body_size 10m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        --- server上限制  --\x3e 头文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许客户端请求的最大单文件字节数")]),s._v("\nclient_body_buffer_size 128k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缓冲区代理缓冲用户端请求的最大字节数.  -- Server上  单独给客户 划分空间")]),s._v("\nproxy_connect_timeout "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        -- Client -- Proxy <- ？？？-> Servers")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nginx跟后端服务器连接超时时间(代理连接超时)")]),s._v("\nproxy_send_timeout "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#            --- 请求 - 回复 --时间过长 --\x3e 90s 5s 90s - 503   ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后端服务器数据回传时间(代理发送超时)")]),s._v("\nproxy_read_timeout "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#            --- 一个现象 （ 一个意思）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 连接成功后，后端服务器响应时间(代理接收超时)")]),s._v("\nproxy_buffer_size 4k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置代理服务器（nginx）保存用户头信息的缓冲区大小")]),s._v("\nproxy_buffers "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 32k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# proxy_buffers缓冲区，网页平均在32k以下的话，这样设置")]),s._v("\nproxy_busy_buffers_size 64k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   -- 并发量大的情况下")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 高负荷下缓冲大小（proxy_buffers*2）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设定请求缓冲")]),s._v("\nlarge_client_header_buffers  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 4k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nclient_header_buffer_size 4k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# #客户端请求头部的缓冲区大小，这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不过由于一般系统分页都要大于1k，所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。")]),s._v("\nopen_file_cache "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("102400")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("inactive")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("20s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个将为打开文件指定缓存，默认是没有启用的，max指定缓存数量，建议和打开文件数一致，inactive是指经过多长时间文件没被请求后删除缓存。")]),s._v("\nopen_file_cache_valid 30s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个是指多长时间检查一次缓存的有效信息。")]),s._v("\nopen_file_cache_min_uses "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# open_file_cache指令中的inactive参数时间内文件的最少使用次数，如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个文件在inactive")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 包含其它配置文件，如自定义的虚拟主机")]),s._v("\ninclude vhosts.conf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);