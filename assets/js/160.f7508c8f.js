(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{630:function(v,_,t){"use strict";t.r(_);var i=t(20),r=Object(i.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("kvm的概述\n")]),v._v(" "),t("h2",{attrs:{id:"_1、kvm虚拟化概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、kvm虚拟化概述"}},[v._v("#")]),v._v(" "),t("strong",[v._v("1、KVM虚拟化概述")])]),v._v(" "),t("p",[t("strong",[v._v("虚拟化技术的分类")])]),v._v(" "),t("p",[v._v("在计算机技术中，虚拟化意味着创建设备或资源的虚拟版本，如服务器，存储设备，网络或者操作系统等等")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("[x] 虚拟化技术分类：")])]),v._v(" "),t("li",[t("ul",[t("li",[v._v("系统虚拟化（我们主要讨论的方向）")]),v._v(" "),t("li",[v._v("存储虚拟化（raid，lvm）")]),v._v(" "),t("li",[v._v("网络虚拟化（sdn）")]),v._v(" "),t("li",[v._v("GPU虚拟化（比特币）")]),v._v(" "),t("li",[v._v("软件虚拟化")]),v._v(" "),t("li",[v._v("硬件支持虚拟化")])])])]),v._v(" "),t("h2",{attrs:{id:"_2、-系统虚拟化的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、-系统虚拟化的分类"}},[v._v("#")]),v._v(" 2、 系统虚拟化的分类**")]),v._v(" "),t("ul",[t("li",[v._v("这种虚拟化通常表现为在单一系统上运行多个操作系统")]),v._v(" "),t("li",[v._v("这些虚拟操作系统同时运行，每个操作系统又是相互独立")])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/180329205226.png",alt:"img"}})]),v._v(" "),t("h2",{attrs:{id:"_3、虚拟化的三种实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、虚拟化的三种实现方式"}},[v._v("#")]),v._v(" "),t("strong",[v._v("3、虚拟化的三种实现方式")])]),v._v(" "),t("h3",{attrs:{id:"_3-1、纯软件仿真"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、纯软件仿真"}},[v._v("#")]),v._v(" "),t("strong",[v._v("3.1、纯软件仿真")])]),v._v(" "),t("ul",[t("li",[v._v("通过模拟完整的硬件环境来虚拟化用户平台")]),v._v(" "),t("li",[v._v("模拟X86，ARM，PowerPC等多种CPU")]),v._v(" "),t("li",[v._v("效率比较低")]),v._v(" "),t("li",[v._v("QEMU，Bochs，PearPC")])]),v._v(" "),t("h3",{attrs:{id:"_3-2、虚拟化层翻译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、虚拟化层翻译"}},[v._v("#")]),v._v(" "),t("strong",[v._v("3.2、虚拟化层翻译")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("多数的虚拟化而采用虚拟机管理程序Hypervisor")])]),v._v(" "),t("li",[t("p",[v._v("Hypervisor是一个软件层或子系统")])]),v._v(" "),t("li",[t("p",[v._v("也称为VMM（Virtual Machine Monitor，虚拟机监控器）")])]),v._v(" "),t("li",[t("p",[v._v("允许多种操作系统在相同的物理系统中运行")])]),v._v(" "),t("li",[t("p",[v._v("控制硬件并向用户操作系统提供访问底层硬件的途径")])]),v._v(" "),t("li",[t("p",[v._v("向来宾操作系统提供虚拟化的硬件")])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/180329222240.png",alt:"img"}})]),v._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/180329224952.png",alt:"img"}})]),v._v(" "),t("p",[t("strong",[v._v("无硬件辅助的全虚拟化")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("基于二进制翻译的全虚拟化")])]),v._v(" "),t("li",[t("p",[v._v("Hypervisor运行在Ring 0")])]),v._v(" "),t("li",[t("p",[v._v("Guest OS运行在Ring 1")])]),v._v(" "),t("li",[t("p",[v._v("机制：异常，捕获，翻译")])]),v._v(" "),t("li",[t("p",[v._v("示例：")])]),v._v(" "),t("li",[t("ul",[t("li",[v._v("VMware Workstation")]),v._v(" "),t("li",[v._v("QWMU")]),v._v(" "),t("li",[v._v("Virtual PC")])])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/image-20210927192956458.png",alt:"image-20210927192956458"}})]),v._v(" "),t("p",[t("strong",[v._v("硬件辅助的全虚拟化")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("Intel VT 和 AMD-V创建一个新的Ring -1 单独给Hypervisor使用")])]),v._v(" "),t("li",[t("p",[v._v("Guest OS可以直接使用Ring 0 而无须修改")])]),v._v(" "),t("li",[t("p",[v._v("示例：")])]),v._v(" "),t("li",[t("ul",[t("li",[v._v("VMware ESXi")]),v._v(" "),t("li",[v._v("Microsoft Hyper-V")]),v._v(" "),t("li",[v._v("Xen3.0")]),v._v(" "),t("li",[v._v("KVM")])])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/180329225949.png",alt:"img"}})]),v._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/lzq70112/images/blog/180330084828.png",alt:"img"}})]),v._v(" "),t("h3",{attrs:{id:"_3-3、容器技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、容器技术"}},[v._v("#")]),v._v(" "),t("strong",[v._v("3.3、容器技术")])]),v._v(" "),t("p",[t("strong",[v._v("kvm")])]),v._v(" "),t("p",[t("strong",[v._v("什么是kvm")])]),v._v(" "),t("p",[v._v("kvm 是基于虚拟化扩展（Intel VT 或者 AMD-V）的 X86 硬件的开源的 Linux 原生的全虚拟化解决方案。kvm中，虚拟机被实现为常规的Linux进程，由标准 Linux 调度程序进行调度；虚机的每个虚拟 CPU 被实现为一个常规的 Linux 进程。这使得 kvm 能够使用 Linux 内核的已有功能。")]),v._v(" "),t("p",[v._v("但是，kvm 本身不执行任何硬件模拟，需要客户空间程序通过 /dev/kvm 接口设置一个客户机虚拟服务器的地址空间，向它提供模拟的 I/O，并将它的视频显示映射回宿主的显示屏。目前这个应用程序是 QEMU。")]),v._v(" "),t("p",[t("strong",[v._v("qemu-kvm")])]),v._v(" "),t("p",[v._v("其实 qemu 原本不是 kvm 的一部分，它自己就是一个纯软件实现的虚拟化系统，所以其性能低下。但是，QEMU 代码中包含整套的虚拟机实现，包括处理器虚拟化，内存虚拟化，以及 KVM需要使用到的虚拟设备模拟（网卡、显卡、存储控制器和硬盘等）。")]),v._v(" "),t("p",[v._v("为了简化代码，KVM 在 QEMU 的基础上做了修改。VM 运行期间，QEMU 会通过 KVM 模块提供的系统调用进入内核，由 KVM 负责将虚拟机置于处理的特殊模式运行。遇到虚机进行 I/O 操作，KVM 会从上次的系统调用出口处返回 QEMU，由")]),v._v(" "),t("p",[t("strong",[v._v("QEMU 来负责解析和模拟这些设备。")])]),v._v(" "),t("p",[v._v("从 QEMU 的角度看，也可以说是 QEMU 使用了 KVM 模块的虚拟化功能，为自己的虚机提供了硬件虚拟化加速。除此以外，虚机的配置和创建、虚机运行说依赖的虚拟设备、虚机运行时的用户环境和交互，以及一些虚机的特定技术比如动态迁移，都是 QEMU 自己实现的。**")]),v._v(" "),t("p",[v._v("简单点说，qemu本身是一种虚拟软件，qemu-kvm就是一种用户态的软件，而kvm是一种内核态的。qemu帮kvm模拟了计算机上的网络、磁盘等设备。")]),v._v(" "),t("p",[t("strong",[v._v("libvirt")])]),v._v(" "),t("p",[v._v("Libvirt是用于管理虚拟化平台的开源的API，后台程序和管理工具。它可以用于管理KVM、Xen、VMware ESX、QEMU和其他虚拟化技术。这些API在云计算的解决方案中广泛使用。")]),v._v(" "),t("p",[v._v("libvirt是提供了一个方便的方式来管理虚拟机和其他虚拟化功能的软件的集合，如存储和网络接口管理。这些软件包括一个API库，一个守护进程（Libvirtd），和一个命令行实用程序（virsh）。")]),v._v(" "),t("p",[v._v("libvirt的首要目标是能够管理多个不同的虚拟化供应商/虚拟机管理程序提供一个单一的方式。例如，命令“virsh列表等等都可以用于任何支持现有的虚拟机管理程序列表（KVM、Xen、VMware ESX，等）不需要学习管理程序特定的工具！")])])}),[],!1,null,null,null);_.default=r.exports}}]);